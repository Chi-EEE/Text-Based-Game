00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 23/03/2022 14:59:25

00000000                             1  *-------------------------------------------------------
00000000                             2  * STARTING MEMORY ADDRESS FOR THE PROGRAMME $1000
00000000                             3  *-------------------------------------------------------
00000000                             4      
00001000                             5      ORG $1000
00001000                             6  
00001000                             7  START:
00001000  6100 0016                  8      BSR     INITIALIZE
00001004                             9      
00001004  6100 008C                 10      BSR     SPLASH
00001008  6100 00A4                 11      BSR     INPUT_NAME
0000100C  6100 0162                 12      BSR     WELCOME
00001010  6100 01C2                 13      BSR     STORY
00001014  6000 03B6                 14      BRA     GAME_LOOP
00001018                            15      
00001018                            16  *-------------------------------------------------------
00001018                            17  *------------------INITIALIZE SUBROUTINE----------------
00001018                            18  *-------------------------------------------------------
00001018                            19  INITIALIZE:
00001018  33FC 0064 00003EB4        20      MOVE.W  #STARTING_CASH,money
00001020  33FC 0001 00003EB6        21      MOVE.W  #1,     day
00001028                            22      
00001028  33FC 0003 00003EB8        23      MOVE.W  #DAY_COUNTER_INCREMENT,     dayCounter  
00001030                            24      
00001030                            25      * Initalize game
00001030  33FC 000F 00003EBC        26      MOVE.W  #15,    temperature
00001038  33FC 0190 00003EBE        27      MOVE.W  #400,   CO2_level
00001040  33FC 0003 00003EBA        28      MOVE.W  #3,     CO2_daily
00001048                            29      
00001048                            30      * Initalize booleans
00001048  13FC 0000 00003EC4        31      MOVE.B  #0,     visitedShop
00001050  13FC 0000 00003EC5        32      MOVE.B  #0,     hasAlarm
00001058  13FC 0000 00003EC6        33      MOVE.B  #0,     hasSword
00001060  13FC 0000 00003EC7        34      MOVE.B  #0,     hasCoffee
00001068  13FC 0000 00003EC8        35      MOVE.B  #0,     temperatureFirstWarning
00001070  13FC 0000 00003EC9        36      MOVE.B  #0,     temperatureSecondWarning
00001078  13FC 0000 00003ECA        37      MOVE.B  #0,     visitedCastle
00001080                            38      
00001080                            39      * Initalize counts
00001080  33FC 0000 00003EC0        40      MOVE.W  #0,     waterMillCount
00001088  33FC 0000 00003EC2        41      MOVE.W  #0,     solarPanelCount  
00001090  4E75                      42      RTS
00001092                            43  
00001092                            44  *-------------------------------------------------------
00001092                            45  *-------------------SPLASH SUBROUTINE------------------
00001092                            46  *-------------------------------------------------------
00001092                            47  SPLASH:
00001092  6100 0D68                 48      BSR     ENDL
00001096  43F9 00001EBF             49      LEA     TITLE,A1    *Load Splash string
0000109C  6100 0D2E                 50      BSR     PRINT
000010A0                            51      
000010A0  6100 0D42                 52      BSR     SYSTEM_PAUSE
000010A4                            53      
000010A4  6100 0D1A                 54      BSR     CLEAR_SCREEN
000010A8  4E75                      55      RTS
000010AA                            56  
000010AA                            57  *-------------------------------------------------------
000010AA                            58  *-------------------name INPUT SUBROUTINE---------------
000010AA                            59  *-------------------------------------------------------
000010AA                            60  CLEAR_INPUT_NAME:
000010AA  6100 0D14                 61      BSR     CLEAR_SCREEN
000010AE                            62  
000010AE                            63  INPUT_NAME:
000010AE  6100 0D4C                 64      BSR     ENDL
000010B2  43F9 0000214E             65      LEA     enterName,A1
000010B8  6100 0D12                 66      BSR     PRINT
000010BC  6100 0D3E                 67      BSR     ENDL
000010C0                            68      
000010C0  103C 0002                 69      MOVE.B  #2,D0
000010C4  43F9 00003E78             70      LEA     name, A1    *Load Name address to A1 to be able to store name
000010CA  4E4F                      71      TRAP    #15         *Input Name
000010CC  6100 0D2E                 72      BSR     ENDL
000010D0                            73  
000010D0                            74      * Check if name is between length 3 and 30
000010D0  B27C 0002                 75      CMP.W     #2,    D1
000010D4  6300 0040                 76      BLS     INPUT_NAME_LENGTH_ERROR
000010D8  B27C 001E                 77      CMP.W     #30,    D1
000010DC  6200 0038                 78      BHI     INPUT_NAME_LENGTH_ERROR
000010E0                            79      
000010E0                            80  INPUT_NAME_LOOP:
000010E0  43F9 00002167             81      LEA     name_confirmation_1, A1
000010E6  6100 0CE4                 82      BSR     PRINT
000010EA                            83      
000010EA  43F9 00003E78             84      LEA     name, A1
000010F0  6100 0CDA                 85      BSR     PRINT
000010F4                            86      
000010F4  43F9 00002176             87      LEA     name_confirmation_2, A1
000010FA  6100 0CD0                 88      BSR     PRINT
000010FE                            89      
000010FE  6100 0CDC                 90      BSR     INPUT_INT
00001102                            91  
00001102  B27C 0002                 92      CMP     #2,D1       *No
00001106  67A2                      93      BEQ     CLEAR_INPUT_NAME
00001108                            94      
00001108  B27C 0001                 95      CMP     #1,D1       *Yes
0000110C  6600 0020                 96      BNE     INPUT_NAME_MENU_ERROR    *Since number is not 1 or 2
00001110                            97  
00001110  6100 0CAE                 98      BSR     CLEAR_SCREEN
00001114  4E75                      99      RTS
00001116                           100  INPUT_NAME_LENGTH_ERROR:
00001116  43F9 000021A9            101      LEA     name_length_fail,   A1
0000111C  6100 0CAE                102      BSR     PRINT
00001120                           103      
00001120  6100 0CDA                104      BSR     ENDL
00001124                           105      
00001124  6100 0CBE                106      BSR     SYSTEM_PAUSE
00001128  6100 0C96                107      BSR     CLEAR_SCREEN
0000112C  6080                     108      BRA     INPUT_NAME
0000112E                           109  
0000112E                           110  * Give error if input to menu wrong
0000112E                           111  INPUT_NAME_MENU_ERROR:
0000112E  6100 0CCC                112      BSR     ENDL
00001132                           113      
00001132  43F9 000021D3            114      LEA     name_confirmation_fail, A1
00001138  6100 0C92                115      BSR     PRINT
0000113C                           116  
0000113C  6100 0CBE                117      BSR     ENDL
00001140  6100 0CA2                118      BSR     SYSTEM_PAUSE
00001144                           119      
00001144  6100 0C7A                120      BSR     CLEAR_SCREEN
00001148                           121      
00001148  6100 0CB2                122      BSR     ENDL
0000114C  43F9 0000214E            123      LEA     enterName,A1
00001152  6100 0C78                124      BSR     PRINT
00001156  6100 0CA4                125      BSR     ENDL
0000115A                           126      
0000115A  43F9 00003E78            127      LEA     name, A1
00001160  6100 0C6A                128      BSR     PRINT
00001164                           129      
00001164  6100 0C96                130      BSR     ENDL
00001168  6100 0C92                131      BSR     ENDL
0000116C                           132      
0000116C  6000 FF72                133      BRA     INPUT_NAME_LOOP
00001170                           134  
00001170                           135  *-------------------------------------------------------
00001170                           136  *-------------------WELCOME SUBROUTINE------------------
00001170                           137  *-------------------------------------------------------
00001170                           138  WELCOME:
00001170  6100 0C8A                139      BSR     ENDL
00001174  43F9 000021F4            140      LEA     welcome_string_1,A1
0000117A  6100 0C50                141      BSR     PRINT
0000117E                           142      
0000117E  43F9 00003E78            143      LEA     name,A1
00001184  6100 0C46                144      BSR     PRINT
00001188                           145      
00001188  43F9 000024D3            146      LEA     Dot, A1
0000118E  6100 0C3C                147      BSR     PRINT
00001192                           148      
00001192  6100 0C68                149      BSR     ENDL
00001196  6100 0C64                150      BSR     ENDL
0000119A                           151      
0000119A  43F9 00002217            152      LEA     welcome_string_2,A1
000011A0  6100 0C2A                153      BSR     PRINT
000011A4                           154      
000011A4  6100 0C56                155      BSR     ENDL
000011A8                           156      
000011A8  6100 0C3A                157      BSR     SYSTEM_PAUSE
000011AC  6100 0C12                158      BSR     CLEAR_SCREEN
000011B0                           159      
000011B0  6100 0C4A                160      BSR     ENDL
000011B4  43F9 0000227B            161      LEA     welcome_string_3,A1
000011BA  6100 0C10                162      BSR     PRINT
000011BE                           163      
000011BE  383C 0003                164      MOVE    #3, D4      *Loop for 3 seconds for dots
000011C2  6100 0CA6                165      BSR     PRINT_DOTS
000011C6                           166      
000011C6  6100 0C34                167      BSR     ENDL
000011CA                           168      
000011CA  6100 0C18                169      BSR     SYSTEM_PAUSE
000011CE  6100 0BF0                170      BSR     CLEAR_SCREEN
000011D2                           171      
000011D2  4E75                     172      RTS
000011D4                           173  *-------------------------------------------------------
000011D4                           174  *-------------------STORY SUBROUTINE--------------------
000011D4                           175  *-------------------------------------------------------
000011D4                           176  STORY:
000011D4  45F9 00003E78            177      LEA     name, A2    *Load name for SPEAKING_ASCII
000011DA  49F9 000024DB            178      LEA     YOU,  A4    *Load Ascii for You
000011E0                           179      
000011E0                           180      * Intro sequence of messages
000011E0  47F9 00002289            181      LEA     intro_story_string_1, A3
000011E6  6100 0C2A                182      BSR     SPEAKING_ASCII
000011EA                           183      
000011EA  47F9 000022CA            184      LEA     intro_story_string_2, A3
000011F0  6100 0C20                185      BSR     SPEAKING_ASCII
000011F4                           186      
000011F4  47F9 0000233A            187      LEA     intro_story_string_3, A3
000011FA  6100 0C16                188      BSR     SPEAKING_ASCII
000011FE                           189      
000011FE  47F9 0000238C            190      LEA     intro_story_string_4, A3
00001204  6100 0C0C                191      BSR     SPEAKING_ASCII
00001208                           192      *
00001208                           193  
00001208  4E75                     194      RTS
0000120A                           195  *-------------------------------------------------------
0000120A                           196  *--------------------ADD_DAY_COUNTER--------------------
0000120A                           197  *------------[A1: message,D1: boolean, D2:buff]--------- 
0000120A                           198  *Checks if D1 is true and add day counter buff to day counter
0000120A                           199  ADD_DAY_COUNTER:
0000120A  B27C 0001                200      CMP     #1,     D1
0000120E  6600 0014                201      BNE     ADD_DAY_COUNTER_END
00001212  D579 00003EB8            202      ADD.W   D2, dayCounter
00001218  6100 0BB2                203      BSR     PRINT
0000121C  6100 0BDE                204      BSR     ENDL
00001220  6100 0BDA                205      BSR     ENDL
00001224                           206  ADD_DAY_COUNTER_END:
00001224  4E75                     207      RTS
00001226                           208  *----------------------------------------------------------------
00001226                           209  *------------------------CO2_REDUCER-----------------------------
00001226                           210  *[A2: message, D1,D2: count, D3:money, D4: CO2 income reduction, D6: total CO2 reduction, D5: total CO2 being made, D7: total CO2 produced so far]
00001226                           211  *  Checks if D1 is true and add day counter buff to day counter
00001226                           212  CO2_REDUCER:
00001226  3202                     213      MOVE.W  D2, D1 * Move count into D1
00001228  B27C 0000                214      CMP.W   #0, D1
0000122C  6300 0074                215      BLS     CO2_REDUCER_END
00001230                           216      
00001230  43F9 00003391            217      LEA     your,A1
00001236  6100 0B94                218      BSR     PRINT
0000123A                           219          
0000123A  6100 0B98                220      BSR     PRINT_INT * Print count of wind mill
0000123E                           221      
0000123E  324A                     222      MOVE    A2, A1
00001240  6100 0B8A                223      BSR     PRINT
00001244                           224      
00001244  3202                     225      MOVE.W  D2,D1 * Move count into D1
00001246  C2C4                     226      MULU.W  D4,D1 * Multiply count by CO2 reduced
00001248  9A41                     227      SUB.W   D1,D5 * Subtract CO2 produced
0000124A  6A00 0006                228      BPL     NOT_SET_0_D5 * Prevent overflow
0000124E  3A3C 0000                229      MOVE.W  #0,D5 
00001252                           230  NOT_SET_0_D5:
00001252  3202                     231      MOVE.W  D2,D1 * Move count into D1
00001254  C2C6                     232      MULU.W  D6,D1 * Multiply count by CO2 reduced
00001256  3E39 00003EBE            233      MOVE.W  (CO2_level), D7
0000125C  9E41                     234      SUB.W   D1, D7 * Subtract CO2 produced
0000125E  6A00 0006                235      BPL     NOT_SET_0_D7 * Prevent overflow
00001262  3E3C 0000                236      MOVE.W  #0,D7
00001266                           237  NOT_SET_0_D7:
00001266  33C7 00003EBE            238      MOVE.W  D7,(CO2_level) * [D7]
0000126C  C2C3                     239      MULU.W  D3,D1 * Multiply count by money to get total money produced * [D7]
0000126E  D379 00003EB4            240      ADD.W   D1, money
00001274                           241  
00001274  6100 0B5E                242      BSR     PRINT_INT * Print money earned
00001278                           243      
00001278  43F9 00003397            244      LEA     and,A1
0000127E  6100 0B4C                245      BSR     PRINT
00001282                           246      
00001282  3202                     247      MOVE.W  D2,D1 * Move count into D1
00001284  C2C4                     248      MULU.W  D4,D1 * Multiply count by CO2 to get total co2 reduced [D4]
00001286                           249      
00001286  3E02                     250      MOVE.W  D2,D7 * Move count into D4
00001288  CEC6                     251      MULU.W  D6,D7 * Multiply count by CO2 total reducer
0000128A                           252  
0000128A  D247                     253      ADD.W   D7, D1
0000128C                           254  
0000128C  6100 0B46                255      BSR     PRINT_INT * Print CO2
00001290                           256      
00001290  43F9 000033A5            257      LEA     from_air,A1
00001296  6100 0B34                258      BSR     PRINT
0000129A                           259      
0000129A  6100 0B60                260      BSR     ENDL
0000129E  6100 0B5C                261      BSR     ENDL
000012A2                           262  CO2_REDUCER_END:
000012A2  4E75                     263      RTS
000012A4                           264  *-------------------------------------------------------
000012A4                           265  *--------------------GET_TEMPERATURE--------------------
000012A4                           266  *------------------------------------------------------- 
000012A4                           267  GET_TEMPERATURE:
000012A4                           268      * Equation to get temp : co2 * 0.0375
000012A4  223C 00000177            269      MOVE.L  #375, D1
000012AA  C2F9 00003EBE            270      MULU.W  (CO2_level), D1
000012B0                           271      
000012B0  B27C 0000                272      CMP     #0, D1 * Check if D1 is 0
000012B4  6600 000C                273      BNE     GET_TEMPERATURE_END
000012B8  33FC 0000 00003EBC       274      MOVE.W  #0, temperature
000012C0  4E75                     275      RTS
000012C2                           276      GET_TEMPERATURE_END: * Cant divide by 0
000012C2  82FC 2710                277      DIVU.W  #10000, D1
000012C6  82FC 000A                278      DIVU.W  #10, D1
000012CA  33C1 00003EBC            279      MOVE.W  D1, temperature * Calculate temperature
000012D0                           280  
000012D0  4E75                     281      RTS
000012D2                           282  END_DAY:    
000012D2  6100 0AEC                283      BSR     CLEAR_SCREEN
000012D6  5279 00003EB6            284      ADD.W   #1, day     *Increase day by 1
000012DC                           285      
000012DC  3239 00003EBC            286      MOVE.W  (temperature),D1 * If temperature is greater than 44 at end of day
000012E2  B27C 002C                287      CMP     #44,    D1
000012E6  6200 0A22                288      BHI     END_GAME_LOSE * Lose
000012EA                           289      
000012EA  6100 0B9C                290      BSR     RANDOM_NUMBER_100   * Get rng num between 0 - 100
000012EE  3A01                     291      MOVE.W  D1, D5          * add random number to total CO2 produced    
000012F0                           292      
000012F0  DA79 00003EBA            293      ADD.W   (CO2_daily), D5 * add CO2 daily to total CO2 produced
000012F6                           294      
000012F6  6100 0BA8                295      BSR     RANDOM_NUMBER_10 * Get random number between 0 - 10
000012FA  D379 00003EBA            296      ADD.W   D1, CO2_daily  * Increase CO2 daily
00001300                           297  DISPLAY_END_DAY:
00001300  49F9 000024DB            298      LEA     YOU,  A4    *Load Ascii for Shop keeper
00001306  6100 0B1E                299      BSR     SHOW_ASCII
0000130A  6100 0AF0                300      BSR     ENDL
0000130E                           301      
0000130E  43F9 00003304            302      LEA     sleep_string,   A1
00001314  6100 0AB6                303      BSR     PRINT
00001318                           304      
00001318  183C 0003                305      MOVE.B  #3,     D4
0000131C  6100 0B4C                306      BSR     PRINT_DOTS
00001320                           307      
00001320  6100 0ADA                308      BSR     ENDL
00001324  6100 0ABE                309      BSR     SYSTEM_PAUSE
00001328                           310      
00001328  33FC 0003 00003EB8       311      MOVE.W  #DAY_COUNTER_INCREMENT,dayCounter  *Increase reset day counter
00001330                           312      
00001330  43F9 0000333F            313      LEA     sleep_alarm_day, A1
00001336  1239 00003EC5            314      MOVE.B  (hasAlarm), D1
0000133C  343C 0002                315      MOVE.W  #ALARM_DAY_COUNTER_BUFF, D2
00001340  6100 FEC8                316      BSR     ADD_DAY_COUNTER
00001344                           317      
00001344  43F9 00003368            318      LEA     sleep_coffee_day, A1
0000134A  1239 00003EC7            319      MOVE.B  (hasCoffee), D1
00001350  343C 0001                320      MOVE.W  #COFFEE_DAY_COUNTER_BUFF, D2
00001354  6100 FEB4                321      BSR     ADD_DAY_COUNTER
00001358                           322      
00001358  13FC 0000 00003EC7       323      MOVE.B  #0, hasCoffee * Reset coffee to 0 as it is consumed
00001360                           324      
00001360  45F9 000033BD            325      LEA       sleep_watermill_produce, A2
00001366  3439 00003EC0            326      MOVE.W    (waterMillCount), D2
0000136C  363C 0006                327      MOVE.W    #WATER_MILL_MONEY, D3
00001370  383C 000A                328      MOVE.W    #WATER_MILL_REDUCTION, D4
00001374  3C3C 0002                329      MOVE.W    #WATER_MILL_REDUCTION_OVERALL, D6
00001378  6100 FEAC                330      BSR       CO2_REDUCER
0000137C                           331  
0000137C  45F9 000033D9            332      LEA       sleep_solarpanel_produce, A2
00001382  3439 00003EC2            333      MOVE.W    (solarPanelCount), D2
00001388  363C 001C                334      MOVE.W    #SOLAR_PANEL_MONEY, D3
0000138C  383C 0023                335      MOVE.W    #SOLAR_PANEL_REDUCTION, D4
00001390  3C3C 0002                336      MOVE.W    #WATER_MILL_REDUCTION_OVERALL, D6
00001394  6100 FE90                337      BSR       CO2_REDUCER
00001398                           338      
00001398  43F9 0000330F            339      LEA     sleep_increment_co2_string_1, A1
0000139E  6100 0A2C                340      BSR     PRINT
000013A2                           341      
000013A2  3205                     342      MOVE.W  D5, D1
000013A4  6100 0A2E                343      BSR     PRINT_INT
000013A8                           344      
000013A8  43F9 0000332F            345      LEA     sleep_increment_co2_string_2, A1
000013AE  6100 0A1C                346      BSR     PRINT
000013B2                           347      
000013B2  DB79 00003EBE            348      ADD.W     D5,   CO2_level
000013B8  6100 FEEA                349      BSR       GET_TEMPERATURE
000013BC                           350      
000013BC  6100 0A3E                351      BSR     ENDL
000013C0                           352  
000013C0  6100 0A92                353      BSR     WAIT
000013C4  6100 0A8E                354      BSR     WAIT
000013C8  6100 0A1A                355      BSR     SYSTEM_PAUSE
000013CC                           356  *-------------------------------------------------------
000013CC                           357  *----------------GAME_LOOP (MAIN LOOP)------------------
000013CC                           358  *------------------------------------------------------- 
000013CC                           359  GAME_LOOP:
000013CC  6100 09F2                360      BSR     CLEAR_SCREEN
000013D0  6100 00A2                361      BSR     DISPLAY 
000013D4                           362  
000013D4  3239 00003EBC            363      MOVE.W  (temperature),  D1
000013DA                           364  
000013DA  343C 001F                365      MOVE.W  #TEMP_THRESHOLD_THIRD, D2
000013DE  43F9 00003D4E            366      LEA     temperature_warning_third, A1
000013E4  6100 0056                367      BSR     TEMPERATURE_WARNING_MORE
000013E8                           368  
000013E8  343C 0018                369      MOVE.W  #TEMP_THRESHOLD_SECOND, D2
000013EC  43F9 00003D29            370      LEA     temperature_warning_second, A1
000013F2  6100 0048                371      BSR     TEMPERATURE_WARNING_MORE
000013F6                           372  
000013F6  343C 0010                373      MOVE.W  #TEMP_THRESHOLD_FIRST, D2
000013FA  43F9 00003CDA            374      LEA     temperature_warning_first, A1
00001400  6100 003A                375      BSR     TEMPERATURE_WARNING_MORE
00001404                           376      
00001404  343C 0005                377      MOVE.W  #TEMP_THRESHOLD_ZERO, D2
00001408  43F9 00003C9A            378      LEA     temperature_warning_zero, A1
0000140E  6100 0048                379      BSR     TEMPERATURE_WARNING_LESS
00001412                           380  
00001412                           381      TEMPERATURE_WARNING_END:
00001412  43F9 0000328B            382      LEA     mainChoice, A1   *LOAD MESSAGE
00001418  6100 09B2                383      BSR     PRINT
0000141C                           384      
0000141C  103C 0004                385      MOVE.B  #4, D0
00001420  4E4F                     386      TRAP    #15      *ASK FOR INPUT
00001422                           387      
00001422  B27C 0001                388      CMP.W   #1,D1      *SHOP IF (D2 == #1)
00001426  6700 00E2                389      BEQ     WORK
0000142A  B27C 0002                390      CMP.W   #2,D1      *ACTION IF (D2 == #2)
0000142E  6700 012C                391      BEQ     CITY
00001432  B27C 0003                392      CMP.W   #3,D1      *SLEEP IF (D2 == #3)
00001436  6700 FE9A                393      BEQ     END_DAY
0000143A                           394      
0000143A  6090                     395      BRA     GAME_LOOP   *LOOP FOREVER
0000143C                           396  *-------------------------------------------------------
0000143C                           397  *--------------TEMPERATURE_WARNING_MORE-----------------
0000143C                           398  *-----[D1: temperature, D2: threshold, A1: Message]----- 
0000143C                           399  *Check if temperature is above threshold and send message
0000143C                           400  TEMPERATURE_WARNING_MORE:
0000143C  B242                     401      CMP.W   D2,    D1
0000143E  6200 0004                402      BHI     TEMPERATURE_WARNING_CONTINUE
00001442  4E75                     403      RTS
00001444                           404      TEMPERATURE_WARNING_CONTINUE:
00001444  6100 0986                405      BSR     PRINT
00001448  6100 09B2                406      BSR     ENDL
0000144C  43F9 000023B8            407      LEA     LINE,   A1
00001452  6100 0978                408      BSR     PRINT
00001456                           409      
00001456  60BA                     410      BRA     TEMPERATURE_WARNING_END
00001458                           411  *-------------------------------------------------------
00001458                           412  *--------------TEMPERATURE_WARNING_LESS-----------------
00001458                           413  *-----[D1: temperature, D2: threshold, A1: Message]----- 
00001458                           414  *Check if temperature is above threshold and send message
00001458                           415  TEMPERATURE_WARNING_LESS:
00001458  B242                     416      CMP.W   D2,    D1
0000145A  6300 0004                417      BLS     TEMPERATURE_WARNING_CONTINUE_L
0000145E  4E75                     418      RTS
00001460                           419      TEMPERATURE_WARNING_CONTINUE_L:
00001460  6100 096A                420      BSR     PRINT
00001464  6100 0996                421      BSR     ENDL
00001468  43F9 000023B8            422      LEA     LINE,   A1
0000146E  6100 095C                423      BSR     PRINT
00001472                           424      
00001472  609E                     425      BRA     TEMPERATURE_WARNING_END
00001474                           426  *-------------------------------------------------------
00001474                           427  *-------------------DISPLAY SUBROUTINE------------------
00001474                           428  *-------------------------------------------------------
00001474                           429  DISPLAY:
00001474  43F9 00002409            430      LEA     GAME_LINES, A1
0000147A  6100 0950                431      BSR     PRINT
0000147E                           432      
0000147E  323C 0201                433      MOVE.W  #$0201,  D1  *Move text cursor to text position
00001482  303C 000B                434      MOVE    #11,    D0
00001486  4E4F                     435      TRAP    #15
00001488                           436      
00001488                           437      * Display Name
00001488  43F9 000024B0            438      LEA     NAME_LABEL, A1
0000148E  6100 093C                439      BSR     PRINT
00001492  43F9 00003E78            440      LEA     name, A1
00001498  6100 0932                441      BSR     PRINT
0000149C                           442      * ----------
0000149C  6100 095E                443      BSR     ENDL
000014A0                           444      
000014A0  323C 0202                445      MOVE.W  #$0202,  D1  *Move text cursor to text position
000014A4  303C 000B                446      MOVE    #11,    D0
000014A8  4E4F                     447      TRAP    #15
000014AA                           448  
000014AA                           449      * Display money
000014AA  43F9 000024B7            450      LEA     MONEY_LABEL, A1
000014B0  6100 091A                451      BSR     PRINT
000014B4  3239 00003EB4            452      MOVE.W  (money), D1
000014BA  6100 0918                453      BSR     PRINT_INT
000014BE                           454      * ----------
000014BE                           455      
000014BE  323C 3501                456      MOVE.W  #$3501,  D1  *Move text cursor to text position
000014C2  303C 000B                457      MOVE    #11,    D0
000014C6  4E4F                     458      TRAP    #15
000014C8                           459      
000014C8                           460      * Display Day
000014C8  43F9 000024BF            461      LEA     DAY_LABEL, A1
000014CE  6100 08FC                462      BSR     PRINT
000014D2  3239 00003EB6            463      MOVE.W  (day), D1
000014D8  6100 08FA                464      BSR     PRINT_INT
000014DC                           465      * ----------
000014DC  6100 091E                466      BSR     ENDL
000014E0                           467  
000014E0  323C 3502                468      MOVE.W  #$3502,  D1  *Move text cursor to text position
000014E4  303C 000B                469      MOVE    #11,    D0
000014E8  4E4F                     470      TRAP    #15
000014EA                           471      
000014EA                           472      * Display temperature
000014EA  43F9 000024C5            473      LEA     temperature_LABEL, A1
000014F0  6100 08DA                474      BSR     PRINT
000014F4  3239 00003EBC            475      MOVE.W  (temperature), D1
000014FA  6100 08D8                476      BSR     PRINT_INT
000014FE                           477      * ----------
000014FE                           478  
000014FE                           479      * Reset cursor pos back to normal
000014FE  323C 0004                480      MOVE.W  #$0004,  D1
00001502  303C 000B                481      MOVE    #11,    D0
00001506  4E4F                     482      TRAP    #15
00001508                           483  
00001508  4E75                     484      RTS
0000150A                           485  
0000150A                           486  *-------------------------------------------------------
0000150A                           487  *--------------------WORK SUBROUTINE--------------------
0000150A                           488  *-------------------------------------------------------
0000150A                           489  WORK:
0000150A  6100 08B4                490      BSR     CLEAR_SCREEN
0000150E                           491      
0000150E                           492      *if (dayCounter - 2 < 0) = tired
0000150E  3239 00003EB8            493      MOVE.W  (dayCounter),  D1
00001514  5541                     494      SUB     #2, D1
00001516  6B00 002E                495      BMI     TIRED_WORK  * Prevent day counter from going into -1
0000151A                           496      
0000151A  33C1 00003EB8            497      MOVE.W  D1,  dayCounter * Set day counter to subtracted day counter
00001520                           498  
00001520  6100 08DA                499      BSR     ENDL
00001524                           500  
00001524  43F9 00003C50            501      LEA     work_string, A1
0000152A  6100 08A0                502      BSR     PRINT
0000152E                           503      
0000152E  0679 004B 00003EB4       504      ADD.W   #SALARY, money
00001536  183C 0003                505      MOVE.B  #3,     D4
0000153A  6100 092E                506      BSR     PRINT_DOTS
0000153E                           507      
0000153E  6100 08A4                508      BSR     SYSTEM_PAUSE
00001542                           509      
00001542  6000 FE88                510      BRA GAME_LOOP
00001546                           511  TIRED_WORK:
00001546  6100 08B4                512      BSR     ENDL
0000154A                           513  
0000154A  43F9 00003C58            514      LEA     work_tired_string, A1
00001550  6100 087A                515      BSR     PRINT
00001554                           516      
00001554  6100 088E                517      BSR     SYSTEM_PAUSE
00001558  6000 FE72                518      BRA     GAME_LOOP
0000155C                           519  *-------------------------------------------------------
0000155C                           520  *--------------------CITY SUBROUTINE--------------------
0000155C                           521  *-------------------------------------------------------
0000155C                           522  CITY:
0000155C  6100 0862                523      BSR     CLEAR_SCREEN
00001560  6100 FF12                524      BSR     DISPLAY 
00001564                           525      
00001564  43F9 000033F6            526      LEA     cityChoice, A1   *LOAD MESSAGE
0000156A  6100 0860                527      BSR     PRINT
0000156E                           528      
0000156E  103C 0004                529      MOVE.B  #4, D0
00001572  4E4F                     530      TRAP    #15      *ASK FOR INPUT
00001574                           531      
00001574  B27C 0001                532      CMP.W   #1,D1      *SHOP IF (D2 == #1)
00001578  6700 001C                533      BEQ     SHOP
0000157C  B27C 0002                534      CMP.W   #2,D1      *EXPLORE IF (D2 == #2)
00001580  6700 033C                535      BEQ     EXPLORE
00001584  B27C 0003                536      CMP.W   #3,D1      *MANAGE IF (D2 == #3)
00001588  6700 0572                537      BEQ     MANAGE
0000158C  B27C 0004                538      CMP.W   #4,D1      *LEAVE IF (D2 == #4)
00001590  6700 FE3A                539      BEQ     GAME_LOOP
00001594  60C6                     540      BRA     CITY
00001596                           541  
00001596                           542  *-------------------------------------------------------
00001596                           543  *--------------------SHOP SUBROUTINE--------------------
00001596                           544  *-------------------------------------------------------
00001596                           545  SHOP:
00001596  6100 0828                546      BSR     CLEAR_SCREEN
0000159A                           547      
0000159A  0C39 0000 00003EC4       548      CMP.B   #0,   visitedShop
000015A2  6700 0078                549      BEQ     FIRST_TIME_SHOP
000015A6                           550  
000015A6  49F9 00002A2E            551      LEA     SHOP_KEEPER,      A4
000015AC                           552      
000015AC  6100 0878                553      BSR     SHOW_ASCII
000015B0  6100 084A                554      BSR     ENDL
000015B4                           555      
000015B4  43F9 00002A1E            556      LEA     SHOP_KEEPER_NAME, A1
000015BA  6100 0810                557      BSR     PRINT
000015BE                           558  
000015BE  43F9 000024D5            559      LEA     TALK_1, A1
000015C4  6100 0806                560      BSR     PRINT
000015C8                           561      
000015C8  43F9 0000348B            562      LEA     shop_string_1, A1
000015CE  6100 07FC                563      BSR     PRINT
000015D2                           564      
000015D2  43F9 00003E78            565      LEA     name, A1
000015D8  6100 07F2                566      BSR     PRINT
000015DC                           567       
000015DC  43F9 00003492            568      LEA     shop_string_2,  A1
000015E2  6100 07E8                569      BSR     PRINT
000015E6                           570      
000015E6  43F9 000024D9            571      LEA     TALK_2, A1
000015EC  6100 07DE                572      BSR     PRINT
000015F0                           573      
000015F0  43F9 000034C1            574      LEA     shop_string_3,  A1
000015F6  6100 07D4                575      BSR     PRINT
000015FA                           576  
000015FA  103C 0004                577      MOVE.B  #4, D0
000015FE  4E4F                     578      TRAP    #15      *ASK FOR INPUT
00001600                           579      
00001600  B27C 0001                580      CMP.W   #1,D1      *BROWSE_SHOP IF (D1 == #1)
00001604  6700 0112                581      BEQ     BROWSE_SHOP
00001608  B27C 0002                582      CMP.W   #2,D1      *SELL_ITEM_SHOP IF (D1 == #2)
0000160C  6700 0296                583      BEQ     SELL_ITEM_SHOP
00001610  B27C 0003                584      CMP.W   #3,D1      *CITY IF (D1 == #3)
00001614  6700 FF46                585      BEQ     CITY
00001618                           586      
00001618  6000 FF7C                587      BRA     SHOP
0000161C                           588  FIRST_TIME_SHOP:
0000161C  13FC 0001 00003EC4       589      MOVE.B    #1, visitedShop
00001624                           590  
00001624                           591      *INTRODUCE
00001624  49F9 00002A2E            592      LEA     SHOP_KEEPER,  A4    *Load Ascii for Shop keeper
0000162A                           593     
0000162A  6100 07FA                594      BSR     SHOW_ASCII
0000162E  6100 07CC                595      BSR     ENDL
00001632                           596  
00001632  43F9 00002A1E            597      LEA     SHOP_KEEPER_NAME, A1
00001638  6100 0792                598      BSR     PRINT
0000163C                           599  
0000163C  43F9 000024D5            600      LEA     TALK_1, A1
00001642  6100 0788                601      BSR     PRINT
00001646                           602      
00001646  43F9 00003633            603      LEA     shop_intro_string_1, A1
0000164C  6100 077E                604      BSR     PRINT
00001650                           605      
00001650  43F9 00002A1E            606      LEA     SHOP_KEEPER_NAME, A1
00001656  6100 0774                607      BSR     PRINT
0000165A                           608      
0000165A  43F9 00003654            609      LEA     shop_intro_string_2,  A1
00001660  6100 076A                610      BSR     PRINT
00001664                           611      
00001664  43F9 000024D9            612      LEA     TALK_2, A1
0000166A  6100 0760                613      BSR     PRINT
0000166E                           614      
0000166E  6100 078C                615      BSR     ENDL
00001672                           616      
00001672  6100 0770                617      BSR     SYSTEM_PAUSE
00001676                           618      *
00001676  6000 FF1E                619      BRA     SHOP
0000167A                           620  *-------------------------------------------------------
0000167A                           621  *----------------PRINT_SHOP SUBROUTINE------------------
0000167A                           622  *-------------------------------------------------------
0000167A                           623  PRINT_SHOP:
0000167A                           624      * Display shop items and cost
0000167A                           625  
0000167A  43F9 0000351F            626      LEA     shop_browse_1, A1
00001680  6100 074A                627      BSR     PRINT
00001684  323C 0014                628      MOVE.W  #ALARM_COST, D1
00001688  6100 074A                629      BSR     PRINT_INT
0000168C                           630  
0000168C  43F9 0000356C            631      LEA     shop_browse_2, A1
00001692  6100 0738                632      BSR     PRINT
00001696  323C 00C8                633      MOVE.W  #WATER_MILL_COST, D1
0000169A  6100 0738                634      BSR     PRINT_INT
0000169E                           635  
0000169E  43F9 00003580            636      LEA     shop_browse_3, A1
000016A4  6100 0726                637      BSR     PRINT
000016A8  323C 03E8                638      MOVE.W  #SOLAR_PANEL_COST, D1
000016AC  6100 0726                639      BSR     PRINT_INT
000016B0                           640  
000016B0  43F9 00003595            641      LEA     shop_browse_4, A1
000016B6  6100 0714                642      BSR     PRINT
000016BA  323C 0032                643      MOVE.W  #SWORD_COST, D1
000016BE  6100 0714                644      BSR     PRINT_INT
000016C2                           645  
000016C2  43F9 000035A4            646      LEA     shop_browse_5, A1
000016C8  6100 0702                647      BSR     PRINT
000016CC  323C 000C                648      MOVE.W  #COFFEE_COST, D1
000016D0  6100 0702                649      BSR     PRINT_INT
000016D4                           650      
000016D4  43F9 000035B4            651      LEA     shop_browse_6, A1
000016DA  6100 06F0                652      BSR     PRINT
000016DE                           653      
000016DE  4E75                     654      RTS
000016E0                           655  *-------------------------------------------------------
000016E0                           656  *-------------------UNABLE_BUY SUBROUTINE---------------
000016E0                           657  *----------------------[D2: need_money]-----------------
000016E0                           658  UNABLE_BUY:
000016E0  43F9 000035DA            659      LEA     shop_unable_buy_string_1, A1
000016E6  6100 06E4                660      BSR     PRINT
000016EA                           661      
000016EA                           662      * Display current money
000016EA  3239 00003EB4            663      MOVE.W  (money),    D1
000016F0  6100 06E2                664      BSR     PRINT_INT
000016F4                           665      
000016F4  43F9 000035E4            666      LEA     shop_unable_buy_string_2, A1
000016FA  6100 06D0                667      BSR     PRINT
000016FE                           668      
000016FE                           669      * Display money needed
000016FE  9441                     670      SUB     D1, D2
00001700  3202                     671      MOVE    D2, D1
00001702  6100 06D0                672      BSR     PRINT_INT
00001706                           673  
00001706  43F9 000035F5            674      LEA     shop_unable_buy_string_3, A1
0000170C  6100 06BE                675      BSR     PRINT
00001710                           676      
00001710  6100 06D2                677      BSR     SYSTEM_PAUSE
00001714  6100 06AA                678      BSR     CLEAR_SCREEN
00001718                           679  BROWSE_SHOP:  
00001718  6100 06A6                680      BSR     CLEAR_SCREEN
0000171C                           681      
0000171C  49F9 00002A2E            682      LEA     SHOP_KEEPER,  A4    *Load Ascii for Shop keeper
00001722  6100 0702                683      BSR     SHOW_ASCII
00001726  6100 06D4                684      BSR     ENDL
0000172A                           685      
0000172A  6100 FF4E                686      BSR     PRINT_SHOP
0000172E                           687  
0000172E  103C 0004                688      MOVE.B  #4, D0
00001732  4E4F                     689      TRAP    #15      *ASK FOR INPUT
00001734                           690      
00001734  B27C 0001                691      CMP.W   #1,D1      *Alarm Clock IF (D1 == #1)
00001738  6700 00BA                692      BEQ     ALARM_CLOCK
0000173C  B27C 0002                693      CMP.W   #2,D1      *Small Water Mill IF (D1 == #2)
00001740  6700 00CA                694      BEQ     WATER_MILL
00001744  B27C 0003                695      CMP.W   #3,D1      *Solar Panel IF (D1 == #3)
00001748  6700 00F2                696      BEQ     SOLAR_PANEL
0000174C  B27C 0004                697      CMP.W   #4,D1      *Sword IF (D1 == #1)
00001750  6700 011E                698      BEQ     SWORD
00001754  B27C 0005                699      CMP.W   #5,D1      *Coffee IF (D1 == #2)
00001758  6700 0130                700      BEQ     COFFEE
0000175C  B27C 0006                701      CMP.W   #6,D1      *Exit Browse IF (D1 == #3)
00001760  6700 FE34                702      BEQ     SHOP
00001764                           703      
00001764  60B2                     704      BRA     BROWSE_SHOP
00001766                           705  *-------------------------------------------------------
00001766                           706  *---------------CONFIRM_SHOP SUBROUTINE-----------------
00001766                           707  *   Check if player wants to actually buy the item
00001766                           708  *                 [D0,D1,D2: cost]
00001766                           709  CONFIRM_SHOP:       
00001766  6100 0658                710      BSR CLEAR_SCREEN
0000176A  6100 FD08                711      BSR DISPLAY
0000176E                           712      
0000176E                           713      * Ask
0000176E  43F9 00003692            714      LEA shop_confirm_string, A1
00001774  6100 0656                715      BSR PRINT
00001778                           716      
00001778                           717      * Cost
00001778  3202                     718      MOVE.W  D2, D1
0000177A  6100 0658                719      BSR PRINT_INT
0000177E                           720      
0000177E                           721      * Yes or No
0000177E  43F9 000036C4            722      LEA YES_NO, A1
00001784  6100 0646                723      BSR PRINT
00001788                           724      
00001788  103C 0004                725      MOVE.B  #4, D0
0000178C  4E4F                     726      TRAP    #15      *ASK FOR INPUT
0000178E                           727      
0000178E  B27C 0002                728      CMP.W   #2,D1      *No Clock IF (D1 == #2)
00001792  6784                     729      BEQ     BROWSE_SHOP
00001794  B27C 0001                730      CMP.W   #1,D1      *Repeat choice IF (D1 != #1)
00001798  66CC                     731      BNE     CONFIRM_SHOP
0000179A  4E75                     732      RTS
0000179C                           733  *-------------------------------------------------------
0000179C                           734  *-----------PURCHASED_ITEM_SHOP SUBROUTINE--------------
0000179C                           735  *-------------------------------------------------------
0000179C                           736  PURCHASED_ITEM_SHOP:  
0000179C  45F9 00002A1E            737      LEA     SHOP_KEEPER_NAME, A2
000017A2  47F9 000036ED            738      LEA     shop_thank_string, A3
000017A8  49F9 00002A2E            739      LEA     SHOP_KEEPER, A4
000017AE                           740  
000017AE  6100 0662                741      BSR     SPEAKING_ASCII
000017B2                           742      
000017B2  6100 060C                743      BSR     CLEAR_SCREEN
000017B6  4E75                     744      RTS
000017B8                           745  *-------------------------------------------------------
000017B8                           746  *---------ATTEMPT_BUY_SINGLE_ITEM SUBROUTINE------------
000017B8                           747  *----------------[D2:cost, A1: boolean]-----------------
000017B8                           748  *           Used for purchasing boolean items
000017B8                           749  ATTEMPT_BUY_SINGLE_ITEM:
000017B8                           750      * If (!boolean) { return already_have_item(); }
000017B8  1211                     751      MOVE.B  (A1), D1
000017BA  B23C 0000                752      CMP.B   #0, D1
000017BE  6600 001E                753      BNE     ALREADY_HAVE_ITEM
000017C2                           754      
000017C2                           755      * Check if able to afford
000017C2  3239 00003EB4            756      MOVE.W  (money),  D1
000017C8  9242                     757      SUB.W   D2, D1
000017CA  6B00 FF14                758      BMI     UNABLE_BUY
000017CE                           759      
000017CE                           760      * Remove money and set boolean to true
000017CE  33C1 00003EB4            761      MOVE.W  D1, money
000017D4  12BC 0001                762      MOVE.B  #1, (A1)
000017D8                           763     
000017D8  61C2                     764      BSR     PURCHASED_ITEM_SHOP
000017DA                           765      
000017DA  6000 FF3C                766      BRA     BROWSE_SHOP
000017DE                           767  ALREADY_HAVE_ITEM:
000017DE  43F9 00003617            768      LEA     shop_already_have_string,   A1
000017E4  6100 05E6                769      BSR     PRINT
000017E8                           770      
000017E8  6100 05FA                771      BSR     SYSTEM_PAUSE
000017EC  6100 05D2                772      BSR     CLEAR_SCREEN
000017F0  6000 FF26                773      BRA     BROWSE_SHOP
000017F4                           774  ALARM_CLOCK:
000017F4  6100 05CA                775      BSR     CLEAR_SCREEN
000017F8  6100 0602                776      BSR     ENDL
000017FC                           777      
000017FC                           778      * Ask for confirmation
000017FC  343C 0014                779      MOVE.W  #ALARM_COST, D2
00001800  6100 FF64                780      BSR     CONFIRM_SHOP
00001804                           781      
00001804  43F9 00003EC5            782      LEA     hasAlarm, A1
0000180A  60AC                     783      BRA     ATTEMPT_BUY_SINGLE_ITEM
0000180C                           784  WATER_MILL:
0000180C  6100 05B2                785      BSR     CLEAR_SCREEN
00001810  6100 05EA                786      BSR     ENDL
00001814                           787      
00001814                           788      * Ask for confirmation
00001814  343C 00C8                789      MOVE.W  #WATER_MILL_COST, D2
00001818  6100 FF4C                790      BSR     CONFIRM_SHOP
0000181C                           791      
0000181C                           792      * Check if able to afford item
0000181C  3239 00003EB4            793      MOVE.W  (money),  D1
00001822  9242                     794      SUB.W   D2, D1
00001824  6B00 FEBA                795      BMI     UNABLE_BUY
00001828                           796      
00001828                           797      * Remove money and increment count
00001828  33C1 00003EB4            798      MOVE.W  D1, money
0000182E  5279 00003EC0            799      ADD.W   #1, waterMillCount
00001834                           800     
00001834  6100 FF66                801      BSR     PURCHASED_ITEM_SHOP
00001838                           802      
00001838  6000 FEDE                803      BRA     BROWSE_SHOP
0000183C                           804  SOLAR_PANEL:
0000183C  6100 0582                805      BSR     CLEAR_SCREEN
00001840  6100 05BA                806      BSR     ENDL
00001844                           807      
00001844                           808      * Ask for confirmation
00001844  343C 03E8                809      MOVE.W  #SOLAR_PANEL_COST, D2
00001848  6100 FF1C                810      BSR     CONFIRM_SHOP
0000184C                           811      
0000184C                           812      * Check if able to afford item
0000184C  3239 00003EB4            813      MOVE.W  (money),  D1
00001852  343C 03E8                814      MOVE.W  #SOLAR_PANEL_COST, D2
00001856  9242                     815      SUB.W   D2, D1
00001858  6B00 FE86                816      BMI     UNABLE_BUY
0000185C                           817      
0000185C                           818      * Remove money and increment count
0000185C  33C1 00003EB4            819      MOVE.W  D1, money
00001862  5279 00003EC2            820      ADD.W  #1,  solarPanelCount
00001868                           821      
00001868  6100 FF32                822      BSR     PURCHASED_ITEM_SHOP
0000186C                           823      
0000186C  6000 FEAA                824      BRA     BROWSE_SHOP
00001870                           825  SWORD:
00001870  6100 054E                826      BSR     CLEAR_SCREEN
00001874  6100 0586                827      BSR     ENDL
00001878                           828      
00001878                           829      * Confirm if player wants to buy sword
00001878  343C 0032                830      MOVE.W  #SWORD_COST, D2
0000187C  6100 FEE8                831      BSR     CONFIRM_SHOP
00001880                           832      
00001880  43F9 00003EC6            833      LEA     hasSword, A1
00001886  6000 FF30                834      BRA     ATTEMPT_BUY_SINGLE_ITEM
0000188A                           835  COFFEE:
0000188A  6100 0534                836      BSR     CLEAR_SCREEN
0000188E  6100 056C                837      BSR     ENDL
00001892                           838      
00001892                           839      * Confirm if player wants to buy coffee
00001892  343C 000C                840      MOVE.W  #COFFEE_COST, D2
00001896  6100 FECE                841      BSR     CONFIRM_SHOP
0000189A                           842      
0000189A  43F9 00003EC7            843      LEA     hasCoffee, A1
000018A0  6000 FF16                844      BRA     ATTEMPT_BUY_SINGLE_ITEM
000018A4                           845  SELL_ITEM_SHOP:
000018A4  45F9 00002A1E            846      LEA     SHOP_KEEPER_NAME, A2
000018AA  47F9 0000370D            847      LEA     shop_unable_string, A3
000018B0  49F9 00002A2E            848      LEA     SHOP_KEEPER, A4
000018B6                           849  
000018B6  6100 055A                850      BSR     SPEAKING_ASCII
000018BA  6000 FCDA                851      BRA     SHOP
000018BE                           852  *-------------------------------------------------------
000018BE                           853  *--------------------EXPLORE SUBROUTINE-----------------
000018BE                           854  *-------------------------------------------------------
000018BE                           855  EXPLORE:
000018BE  6100 0500                856      BSR     CLEAR_SCREEN
000018C2                           857      
000018C2  6100 0538                858      BSR     ENDL
000018C6                           859      
000018C6  3439 00003EB6            860      MOVE.W  (day), D2
000018CC  323C 0008                861      MOVE.W  #CONSTRUCTION_FINISH, D1
000018D0  9242                     862      SUB.W   D2, D1
000018D2  6A00 0006                863      BPL     EXPLORE_SUB_END * if (D1 < 0) {
000018D6  323C 0000                864      MOVE.W  #0, D1
000018DA                           865      EXPLORE_SUB_END: * }
000018DA  B27C 0000                866      CMP     #0, D1
000018DE  6300 0026                867      BLS     EXPLORE_CASTLE_OUT
000018E2                           868  
000018E2  43F9 00003745            869      LEA     explore_1, A1
000018E8  6100 04E2                870      BSR     PRINT
000018EC                           871      
000018EC  6100 04E6                872      BSR     PRINT_INT
000018F0                           873      
000018F0  43F9 000037A4            874      LEA     explore_2, A1
000018F6  6100 04D4                875      BSR     PRINT
000018FA                           876      
000018FA  6100 0500                877      BSR     ENDL
000018FE                           878      
000018FE  6100 04E4                879      BSR     SYSTEM_PAUSE
00001902  6000 FAC8                880      BRA     GAME_LOOP
00001906                           881  
00001906                           882  EXPLORE_CASTLE_OUT:
00001906  6100 04B8                883      BSR     CLEAR_SCREEN
0000190A                           884  
0000190A                           885      * Messages
0000190A  43F9 00002E95            886      LEA     CASTLE, A1
00001910  6100 04BA                887      BSR     PRINT
00001914                           888      
00001914  6100 04E6                889      BSR     ENDL
00001918                           890      
00001918  43F9 000023B8            891      LEA     LINE, A1
0000191E  6100 04AC                892      BSR     PRINT
00001922                           893      
00001922  6100 04D8                894      BSR     ENDL
00001926                           895      
00001926  43F9 000037AB            896      LEA     explore_castle_out_string, A1
0000192C  6100 049E                897      BSR     PRINT
00001930                           898      
00001930  6100 0522                899      bSR     WAIT
00001934  6100 04AE                900      BSR     SYSTEM_PAUSE
00001938  6100 0486                901      BSR     CLEAR_SCREEN
0000193C                           902      
0000193C  43F9 00002E95            903      LEA     CASTLE, A1
00001942  6100 0488                904      BSR     PRINT
00001946                           905      
00001946  6100 04B4                906      BSR     ENDL
0000194A                           907      
0000194A  43F9 000023B8            908      LEA     LINE, A1
00001950  6100 047A                909      BSR     PRINT
00001954                           910      
00001954  6100 04A6                911      BSR     ENDL
00001958                           912      
00001958  43F9 000037CF            913      LEA     explore_option_out, A1
0000195E  6100 046C                914      BSR     PRINT
00001962                           915      
00001962  6100 0478                916      BSR     INPUT_INT
00001966                           917      
00001966  B27C 0001                918      CMP     #1,     D1
0000196A  6700 000C                919      BEQ     EXPLORE_CASTLE_IN
0000196E  B27C 0002                920      CMP     #2,     D1
00001972  6700 FA58                921      BEQ     GAME_LOOP
00001976                           922  
00001976  608E                     923      BRA     EXPLORE_CASTLE_OUT
00001978                           924  EXPLORE_CASTLE_IN:
00001978                           925      * if visited castle with sword then skip to input
00001978  1239 00003ECA            926      MOVE.B  (visitedCastle), D1
0000197E  B23C 0001                927      CMP.B   #1, D1
00001982  6700 0124                928      BEQ     EXPLORE_CASTLE_IN_INPUT
00001986                           929  
00001986  6100 0438                930      BSR     CLEAR_SCREEN
0000198A  6100 0470                931      BSR     ENDL
0000198E                           932      
0000198E                           933      * Messages
0000198E  43F9 00003817            934      LEA     explore_story_message_1,A1
00001994  6100 0436                935      BSR     PRINT
00001998                           936      
00001998  6100 04BA                937      BSR     WAIT
0000199C  6100 0446                938      BSR     SYSTEM_PAUSE
000019A0  6100 041E                939      BSR     CLEAR_SCREEN
000019A4                           940  
000019A4  45F9 00003E78            941      LEA     name, A2
000019AA  47F9 0000384D            942      LEA     explore_you_message_1,A3
000019B0  49F9 000024DB            943      LEA     YOU, A4
000019B6  6100 045A                944      BSR     SPEAKING_ASCII
000019BA                           945      
000019BA  6100 0440                946      BSR     ENDL
000019BE  43F9 0000386F            947      LEA     explore_story_message_2,A1
000019C4  6100 0406                948      BSR     PRINT
000019C8                           949      
000019C8  6100 048A                950      BSR     WAIT
000019CC  6100 0416                951      BSR     SYSTEM_PAUSE
000019D0  6100 03EE                952      BSR     CLEAR_SCREEN
000019D4                           953      
000019D4  6100 0426                954      BSR     ENDL
000019D8  43F9 000038AF            955      LEA     explore_story_message_3,A1
000019DE  6100 03EC                956      BSR     PRINT
000019E2                           957  
000019E2  6100 0470                958      BSR     WAIT
000019E6  6100 03FC                959      BSR     SYSTEM_PAUSE
000019EA  6100 03D4                960      BSR     CLEAR_SCREEN
000019EE                           961  
000019EE  45F9 000026FC            962      LEA     KING_NAME, A2
000019F4  47F9 000038F5            963      LEA     explore_king_message_1, A3
000019FA  49F9 00002701            964      LEA     KING, A4
00001A00  6100 0410                965      BSR     SPEAKING_ASCII
00001A04                           966  
00001A04  47F9 00003909            967      LEA     explore_king_message_2, A3
00001A0A  6100 0406                968      BSR     SPEAKING_ASCII
00001A0E                           969  
00001A0E  45F9 00003E78            970      LEA     name, A2
00001A14  47F9 0000393A            971      LEA     explore_you_message_2,A3
00001A1A  49F9 000024DB            972      LEA     YOU, A4
00001A20  6100 03F0                973      BSR     SPEAKING_ASCII
00001A24                           974      
00001A24  45F9 000026FC            975      LEA     KING_NAME, A2
00001A2A  47F9 00003961            976      LEA     explore_king_message_3, A3
00001A30  49F9 00002701            977      LEA     KING, A4
00001A36  6100 03DA                978      BSR     SPEAKING_ASCII
00001A3A                           979          
00001A3A  45F9 00003E78            980      LEA     name, A2
00001A40  47F9 000039A1            981      LEA     explore_you_message_3,A3
00001A46  49F9 000024DB            982      LEA     YOU, A4
00001A4C  6100 03C4                983      BSR     SPEAKING_ASCII
00001A50                           984  
00001A50  45F9 000026FC            985      LEA     KING_NAME, A2
00001A56  47F9 000039B9            986      LEA     explore_king_message_4, A3
00001A5C  49F9 00002701            987      LEA     KING, A4
00001A62  6100 03AE                988      BSR     SPEAKING_ASCII
00001A66                           989          
00001A66  45F9 00003E78            990      LEA     name, A2
00001A6C  47F9 00003A0F            991      LEA     explore_you_message_4,A3
00001A72  49F9 000024DB            992      LEA     YOU, A4
00001A78  6100 0398                993      BSR     SPEAKING_ASCII
00001A7C                           994  
00001A7C  45F9 000026FC            995      LEA     KING_NAME, A2
00001A82  47F9 00003A33            996      LEA     explore_king_message_5, A3
00001A88  49F9 00002701            997      LEA     KING, A4
00001A8E  6100 0382                998      BSR     SPEAKING_ASCII
00001A92                           999      
00001A92                          1000      * if (!hasSword) { return; }
00001A92  1239 00003EC6           1001      MOVE.B  (hasSword), D1
00001A98  B23C 0001               1002      CMP.B   #1, D1
00001A9C  6600 0040               1003      BNE     EXPLORE_CASTLE_IN_LEAVE
00001AA0  13FC 0001 00003ECA      1004      MOVE.B  #1, visitedCastle * Set visited castle
00001AA8                          1005  EXPLORE_CASTLE_IN_INPUT:
00001AA8  6100 0316               1006      BSR     CLEAR_SCREEN
00001AAC                          1007  
00001AAC  49F9 000024DB           1008      LEA     YOU, A4
00001AB2  6100 0372               1009      BSR     SHOW_ASCII
00001AB6  6100 0344               1010      BSR     ENDL
00001ABA                          1011          
00001ABA  6100 0340               1012      BSR     ENDL
00001ABE  43F9 00003A5D           1013      LEA     explore_option_in, A1
00001AC4  6100 0306               1014      BSR     PRINT
00001AC8                          1015      
00001AC8  6100 0312               1016      BSR     INPUT_INT
00001ACC                          1017  
00001ACC  B27C 0001               1018      CMP     #1,     D1
00001AD0  6700 0246               1019      BEQ     END_GAME_NEUTRAL
00001AD4  B27C 0002               1020      CMP     #2,     D1
00001AD8  6700 0004               1021      BEQ     EXPLORE_CASTLE_IN_LEAVE
00001ADC                          1022      
00001ADC  60CA                    1023      BRA     EXPLORE_CASTLE_IN_INPUT
00001ADE                          1024  EXPLORE_CASTLE_IN_LEAVE:
00001ADE  6100 02E0               1025      BSR     CLEAR_SCREEN
00001AE2  6100 0318               1026      BSR     ENDL
00001AE6  43F9 00003AA0           1027      LEA     explore_story_message_leave, A1
00001AEC  6100 02DE               1028      BSR     PRINT
00001AF0  6100 030A               1029      BSR     ENDL
00001AF4  6100 02EE               1030      BSR     SYSTEM_PAUSE
00001AF8  6000 F8D2               1031      BRA     GAME_LOOP
00001AFC                          1032  *-------------------------------------------------------
00001AFC                          1033  *--------------------MANAGE SUBROUTINE------------------
00001AFC                          1034  *-------------------------------------------------------
00001AFC                          1035  MANAGE:
00001AFC  6100 02C2               1036      BSR     CLEAR_SCREEN
00001B00  49F9 000024DB           1037      LEA     YOU, A4
00001B06  6100 031E               1038      BSR     SHOW_ASCII
00001B0A  6100 02F0               1039      BSR     ENDL
00001B0E                          1040      
00001B0E  43F9 00003AB6           1041      LEA     manage_browse, A1
00001B14  6100 02B6               1042      BSR     PRINT
00001B18                          1043      * if (hasAlarm) 2
00001B18  1239 00003EC5           1044      MOVE.B  (hasAlarm), D1
00001B1E  B23C 0001               1045      CMP.B   #1, D1
00001B22  6600 0014               1046      BNE     MANAGE_ALARM_END
00001B26  6100 02D4               1047      BSR     ENDL
00001B2A  6100 02D0               1048      BSR     ENDL
00001B2E  43F9 00003ADD           1049      LEA     manage_browse_alarm, A1
00001B34  6100 0296               1050      BSR     PRINT
00001B38                          1051  MANAGE_ALARM_END:
00001B38                          1052      * if (waterMillCount > 0) 3
00001B38  3239 00003EC0           1053      MOVE.W  (waterMillCount), D1
00001B3E  B27C 0000               1054      CMP.W   #0, D1
00001B42  6300 0014               1055      BLS     MANAGE_WATER_END
00001B46  6100 02B4               1056      BSR     ENDL
00001B4A  6100 02B0               1057      BSR     ENDL
00001B4E  43F9 00003AEC           1058      LEA     manage_browse_water, A1
00001B54  6100 0276               1059      BSR     PRINT
00001B58                          1060  MANAGE_WATER_END:
00001B58                          1061      * if (solarPanelCount > 0) 4
00001B58  3239 00003EC2           1062      MOVE.W  (solarPanelCount), D1
00001B5E  B27C 0000               1063      CMP.W   #0, D1
00001B62  6300 0014               1064      BLS     MANAGE_SOLAR_END
00001B66  6100 0294               1065      BSR     ENDL
00001B6A  6100 0290               1066      BSR     ENDL
00001B6E  43F9 00003AFA           1067      LEA     manage_browse_solar, A1
00001B74  6100 0256               1068      BSR     PRINT
00001B78                          1069  MANAGE_SOLAR_END:
00001B78                          1070      * if (hasSword) 5
00001B78  1239 00003EC6           1071      MOVE.B  (hasSword), D1
00001B7E  B23C 0001               1072      CMP.B   #1, D1
00001B82  6600 0014               1073      BNE     MANAGE_SWORD_END
00001B86  6100 0274               1074      BSR     ENDL
00001B8A  6100 0270               1075      BSR     ENDL
00001B8E  43F9 00003B09           1076      LEA     manage_browse_sword, A1
00001B94  6100 0236               1077      BSR     PRINT
00001B98                          1078  MANAGE_SWORD_END:
00001B98                          1079      * if (hasCoffee) 6
00001B98  1239 00003EC7           1080      MOVE.B  (hasCoffee), D1
00001B9E  B23C 0001               1081      CMP.B   #1, D1
00001BA2  6600 0014               1082      BNE     MANAGE_COFFEE_END
00001BA6  6100 0254               1083      BSR     ENDL
00001BAA  6100 0250               1084      BSR     ENDL
00001BAE  43F9 00003B12           1085      LEA     manage_browse_coffee, A1
00001BB4  6100 0216               1086      BSR     PRINT
00001BB8                          1087  MANAGE_COFFEE_END:
00001BB8  6100 0242               1088      BSR     ENDL
00001BBC  43F9 00003B1C           1089      LEA     manage_browse_choice, A1
00001BC2  6100 0208               1090      BSR     PRINT
00001BC6                          1091  
00001BC6  6100 0214               1092      BSR     INPUT_INT * D1
00001BCA                          1093      
00001BCA  B27C 0001               1094      CMP     #1, D1
00001BCE  6700 F98C               1095      BEQ     CITY
00001BD2  B27C 0002               1096      CMP     #2, D1
00001BD6  6700 0026               1097      BEQ     MANAGE_ALARM_INPUT
00001BDA  B27C 0003               1098      CMP     #3, D1
00001BDE  6700 0046               1099      BEQ     MANAGE_WATER_INPUT
00001BE2  B27C 0004               1100      CMP     #4, D1
00001BE6  6700 0088               1101      BEQ     MANAGE_SOLAR_INPUT
00001BEA  B27C 0005               1102      CMP     #5, D1
00001BEE  6700 00CA               1103      BEQ     MANAGE_SWORD_INPUT
00001BF2  B27C 0006               1104      CMP     #6, D1
00001BF6  6700 00EA               1105      BEQ     MANAGE_COFFEE_INPUT
00001BFA                          1106  
00001BFA  6000 FF00               1107      BRA     MANAGE
00001BFE                          1108  
00001BFE                          1109  MANAGE_ALARM_INPUT:
00001BFE                          1110      * if (!hasAlarm) { return; }
00001BFE  1239 00003EC5           1111      MOVE.B  (hasAlarm), D1
00001C04  B23C 0001               1112      CMP.B   #1, D1
00001C08  6600 FEF2               1113      BNE     MANAGE
00001C0C                          1114  
00001C0C  6100 01B2               1115      BSR     CLEAR_SCREEN
00001C10                          1116      
00001C10                          1117      * Info about item
00001C10  43F9 00003B30           1118      LEA     manage_info_string_alarm, A1
00001C16  6100 01B4               1119      BSR     PRINT
00001C1A                          1120  
00001C1A  6100 01E0               1121      BSR     ENDL
00001C1E  6100 01C4               1122      BSR     SYSTEM_PAUSE
00001C22                          1123  
00001C22  6000 FED8               1124      BRA     MANAGE
00001C26                          1125  
00001C26                          1126  MANAGE_WATER_INPUT:
00001C26                          1127      * if (waterMillCount < 0) { return; }
00001C26  3239 00003EC0           1128      MOVE.W  (waterMillCount), D1
00001C2C  B27C 0000               1129      CMP.W   #0, D1
00001C30  6300 FECA               1130      BLS     MANAGE
00001C34                          1131  
00001C34  6100 018A               1132      BSR     CLEAR_SCREEN
00001C38                          1133      
00001C38                          1134      * Info about item
00001C38  43F9 00003B5F           1135      LEA     manage_info_string_water, A1
00001C3E  6100 018C               1136      BSR     PRINT
00001C42                          1137  
00001C42  6100 01B8               1138      BSR     ENDL
00001C46                          1139  
00001C46  43F9 00003C1F           1140      LEA     manage_default_amount_string, A1
00001C4C  6100 017E               1141      BSR     PRINT
00001C50                          1142  
00001C50  3239 00003EC0           1143      MOVE.W  waterMillCount, D1
00001C56  6100 017C               1144      BSR     PRINT_INT
00001C5A                          1145  
00001C5A  43F9 00003C33           1146      LEA     manage_default_amount_waterMill, A1
00001C60  6100 016A               1147      BSR     PRINT
00001C64                          1148  
00001C64  6100 0196               1149      BSR     ENDL
00001C68  6100 017A               1150      BSR     SYSTEM_PAUSE
00001C6C                          1151      
00001C6C  6000 FE8E               1152      BRA     MANAGE
00001C70                          1153  MANAGE_SOLAR_INPUT:
00001C70                          1154      * if (solarPanelCount < 0) { return; }
00001C70  3239 00003EC2           1155      MOVE.W  (solarPanelCount), D1
00001C76  B27C 0000               1156      CMP.W   #0, D1
00001C7A  6300 FE80               1157      BLS     MANAGE
00001C7E                          1158  
00001C7E  6100 0140               1159      BSR     CLEAR_SCREEN
00001C82                          1160      
00001C82                          1161      * Info about item
00001C82  43F9 00003B91           1162      LEA     manage_info_string_solar, A1
00001C88  6100 0142               1163      BSR     PRINT
00001C8C                          1164  
00001C8C  6100 016E               1165      BSR     ENDL
00001C90                          1166  
00001C90  43F9 00003C1F           1167      LEA     manage_default_amount_string, A1
00001C96  6100 0134               1168      BSR     PRINT
00001C9A                          1169  
00001C9A  3239 00003EC2           1170      MOVE.W  solarPanelCount, D1
00001CA0  6100 0132               1171      BSR     PRINT_INT
00001CA4                          1172  
00001CA4  43F9 00003C41           1173      LEA     manage_default_amount_solarPanel, A1
00001CAA  6100 0120               1174      BSR     PRINT
00001CAE                          1175  
00001CAE  6100 014C               1176      BSR     ENDL
00001CB2  6100 0130               1177      BSR     SYSTEM_PAUSE
00001CB6                          1178      
00001CB6  6000 FE44               1179      BRA     MANAGE
00001CBA                          1180  MANAGE_SWORD_INPUT:
00001CBA                          1181      * if (!hasSword) { return; }
00001CBA  1239 00003EC6           1182      MOVE.B  (hasSword), D1
00001CC0  B23C 0001               1183      CMP.B   #1, D1
00001CC4  6600 FE36               1184      BNE     MANAGE
00001CC8                          1185  
00001CC8  6100 00F6               1186      BSR     CLEAR_SCREEN
00001CCC                          1187      
00001CCC                          1188      * Info about item
00001CCC  43F9 00003BCF           1189      LEA     manage_info_string_sword, A1
00001CD2  6100 00F8               1190      BSR     PRINT
00001CD6                          1191  
00001CD6  6100 0124               1192      BSR     ENDL
00001CDA  6100 0108               1193      BSR     SYSTEM_PAUSE
00001CDE                          1194  
00001CDE  6000 FE1C               1195      BRA     MANAGE
00001CE2                          1196  
00001CE2                          1197  MANAGE_COFFEE_INPUT:
00001CE2                          1198      * if (!hasCoffee) { return; }
00001CE2  1239 00003EC7           1199      MOVE.B  (hasCoffee), D1
00001CE8  B23C 0001               1200      CMP.B   #1, D1
00001CEC  6600 FE0E               1201      BNE     MANAGE
00001CF0                          1202  
00001CF0  6100 00CE               1203      BSR     CLEAR_SCREEN
00001CF4                          1204      
00001CF4                          1205      * Info about item
00001CF4  43F9 00003BF7           1206      LEA     manage_info_string_coffee, A1
00001CFA  6100 00D0               1207      BSR     PRINT
00001CFE                          1208  
00001CFE  6100 00FC               1209      BSR     ENDL
00001D02  6100 00E0               1210      BSR     SYSTEM_PAUSE
00001D06                          1211  
00001D06  6000 FDF4               1212      BRA     MANAGE
00001D0A                          1213  
00001D0A                          1214  END_GAME_LOSE: * Lose ending for dying to temperature
00001D0A  43F9 00003D9B           1215      LEA     end_game_lose_string, A1
00001D10  6100 00BA               1216      BSR     PRINT    
00001D14  6000 0026               1217      BRA     END_GAME_DISPLAY
00001D18                          1218  END_GAME_NEUTRAL: * Neutral ending for slaying king
00001D18  43F9 00003DC6           1219      LEA     end_game_neutral_1, A1
00001D1E  6100 00AC               1220      BSR     PRINT
00001D22                          1221  
00001D22  6100 0130               1222      BSR     WAIT
00001D26  6100 00BC               1223      BSR     SYSTEM_PAUSE
00001D2A  6100 0094               1224      BSR     CLEAR_SCREEN
00001D2E                          1225      
00001D2E  43F9 00003DE9           1226      LEA     end_game_neutral_2, A1
00001D34  6100 0096               1227      BSR     PRINT
00001D38  6000 0002               1228      BRA     END_GAME_DISPLAY
00001D3C                          1229  END_GAME_DISPLAY:
00001D3C  6100 0116               1230      BSR     WAIT
00001D40  6100 00A2               1231      BSR     SYSTEM_PAUSE
00001D44  6100 007A               1232      BSR     CLEAR_SCREEN
00001D48                          1233  
00001D48  43F9 000023B8           1234      LEA     LINE, A1
00001D4E  6100 007C               1235      BSR     PRINT
00001D52                          1236  
00001D52  6100 00A8               1237      BSR     ENDL
00001D56                          1238  
00001D56  43F9 00003E32           1239      LEA     end_game_details_1, A1
00001D5C  6100 006E               1240      BSR     PRINT
00001D60                          1241      
00001D60  3239 00003EB6           1242      MOVE.W  (day),D1
00001D66  6100 006C               1243      BSR     PRINT_INT
00001D6A                          1244  
00001D6A  43F9 00003E4A           1245      LEA     end_game_details_2, A1
00001D70  6100 005A               1246      BSR     PRINT
00001D74                          1247      
00001D74                          1248      * Display money
00001D74  3239 00003EB4           1249      MOVE.W  (money),D1
00001D7A  6100 0058               1250      BSR     PRINT_INT
00001D7E                          1251      
00001D7E  6100 007C               1252      BSR     ENDL
00001D82                          1253      
00001D82  43F9 00003E58           1254      LEA     end_game_details_3, A1
00001D88  6100 0042               1255      BSR     PRINT
00001D8C                          1256      
00001D8C                          1257      * Display solar panel count
00001D8C  3239 00003EC2           1258      MOVE.W  (solarPanelCount),D1
00001D92  6100 0040               1259      BSR     PRINT_INT
00001D96                          1260  
00001D96  6100 0064               1261      BSR     ENDL
00001D9A  43F9 00003E68           1262      LEA     end_game_details_4, A1
00001DA0  6100 002A               1263      BSR     PRINT
00001DA4                          1264      
00001DA4                          1265      * Display water mill count
00001DA4  3239 00003EC0           1266      MOVE.W  (waterMillCount),D1
00001DAA  6100 0028               1267      BSR     PRINT_INT
00001DAE                          1268  
00001DAE  6100 004C               1269      BSR     ENDL
00001DB2                          1270  
00001DB2  43F9 00003E26           1271      LEA     end_gameover, A1
00001DB8  6100 0012               1272      BSR     PRINT
00001DBC                          1273  
00001DBC  6000 00FA               1274      BRA     END
00001DC0                          1275  *-------------------------------------------------------------------------------------------------------------------------------------------------------*
00001DC0                          1276  *-------------------------------------------------------------------------------------------------------------------------------------------------------*
00001DC0                          1277  *-------------------------------------------------------------------------UTILITY FUNCTIONS-------------------------------------------------------------*
00001DC0                          1278  *-------------------------------------------------------------------------------------------------------------------------------------------------------*
00001DC0                          1279  *-------------------------------------------------------------------------------------------------------------------------------------------------------*
00001DC0                          1280  
00001DC0                          1281  *-------------------------------------------------------
00001DC0                          1282  *----------------CLEAR SCREEN SUBROUTINE----------------
00001DC0                          1283  *-------------------------------------------------------
00001DC0                          1284  CLEAR_SCREEN: 
00001DC0  103C 000B               1285      MOVE.B  #11,D0    CLEAR SCREEN
00001DC4  323C FF00               1286      MOVE.W  #$FF00,D1
00001DC8  4E4F                    1287      TRAP    #15
00001DCA  4E75                    1288      RTS
00001DCC                          1289      
00001DCC                          1290  *-------------------------------------------------------
00001DCC                          1291  *----------------PRINT SUBROUTINE-----------------------
00001DCC                          1292  *--------------------[D0, D1]---------------------------
00001DCC                          1293  PRINT:
00001DCC  103C 000E               1294      MOVE.B  #14,D0
00001DD0  4E4F                    1295      TRAP    #15
00001DD2  4E75                    1296      RTS
00001DD4                          1297      
00001DD4                          1298  *-------------------------------------------------------
00001DD4                          1299  *----------------PRINT_INT SUBROUTINE-------------------
00001DD4                          1300  *--------------------[D0,D1:input]----------------------
00001DD4                          1301  PRINT_INT:
00001DD4  103C 0003               1302      MOVE.B  #3,D0
00001DD8  4E4F                    1303      TRAP    #15
00001DDA  4E75                    1304      RTS
00001DDC                          1305      
00001DDC                          1306  *-------------------------------------------------------
00001DDC                          1307  *----------------INPUT_INT SUBROUTINE-------------------
00001DDC                          1308  *-------------------[D0,D1:output]----------------------
00001DDC                          1309  INPUT_INT:
00001DDC  103C 0004               1310      MOVE.B  #4,D0
00001DE0  4E4F                    1311      TRAP    #15
00001DE2  4E75                    1312      RTS
00001DE4                          1313  *-------------------------------------------------------
00001DE4                          1314  *----------------SYSTEM PAUSE SUBROUTINE----------------
00001DE4                          1315  *-----------------------[D0,A1]-------------------------
00001DE4                          1316  SYSTEM_PAUSE:
00001DE4  6100 0016               1317      BSR      ENDL
00001DE8  43F9 00003C7C           1318      LEA      PAUSE, A1   *DISPLAY PAUSE MESSAGE
00001DEE  61DC                    1319      BSR      PRINT        
00001DF0  103C 0004               1320      MOVE.B  #4, D0
00001DF4  4E4F                    1321      TRAP    #15      *ASK FOR NUMBER but dont use number
00001DF6  6100 0004               1322      BSR     ENDL
00001DFA  4E75                    1323      RTS
00001DFC                          1324      
00001DFC                          1325  *-------------------------------------------------------
00001DFC                          1326  *--------------------ENDL SUBROUTINE--------------------
00001DFC                          1327  *-----------------------[D0,A1]-------------------------
00001DFC                          1328  ENDL:
00001DFC  48E7 8040               1329      MOVEM.L D0/A1,-(A7)
00001E00  303C 000E               1330      MOVE    #14,D0
00001E04  43F9 00001EBC           1331      LEA     CRLF,A1
00001E0A  4E4F                    1332      TRAP    #15
00001E0C  4CDF 0201               1333      MOVEM.L (A7)+,D0/A1
00001E10  4E75                    1334      RTS
00001E12                          1335      
00001E12                          1336  *-------------------------------------------------------
00001E12                          1337  *--------------SPEAKING_ASCII SUBROUTINE----------------
00001E12                          1338  *---------[A1,name: A2, text: A3, ascii: A4]------------
00001E12                          1339  *    Used when a character is speaking a dialogue
00001E12                          1340  SPEAKING_ASCII:
00001E12  61AC                    1341      BSR     CLEAR_SCREEN
00001E14  6100 0010               1342      BSR     SHOW_ASCII
00001E18                          1343      * TALK ABOUT STORY
00001E18  61E2                    1344      BSR     ENDL
00001E1A  6100 001C               1345      BSR     SPEAK
00001E1E  61DC                    1346      BSR     ENDL
00001E20                          1347      *
00001E20                          1348      
00001E20                          1349      * NEXT
00001E20  61C2                    1350      BSR     SYSTEM_PAUSE
00001E22  619C                    1351      BSR     CLEAR_SCREEN
00001E24                          1352      *
00001E24  4E75                    1353      RTS
00001E26                          1354  *-------------------------------------------------------
00001E26                          1355  *---------------SHOW_ASCII SUBROUTINE-------------------
00001E26                          1356  *------------------[A1, ascii: A4]----------------------
00001E26                          1357  SHOW_ASCII:
00001E26  61D4                    1358      BSR     ENDL
00001E28  324C                    1359      MOVE    A4, A1
00001E2A  61A0                    1360      BSR     PRINT
00001E2C  61CE                    1361      BSR     ENDL
00001E2E  43F9 000023B8           1362      LEA     LINE, A1
00001E34  6196                    1363      BSR     PRINT
00001E36  4E75                    1364      RTS
00001E38                          1365  *-------------------------------------------------------
00001E38                          1366  *---------------------SPEAK SUBROUTINE------------------
00001E38                          1367  *----------------[A1,name: A2, text: A3]----------------
00001E38                          1368  SPEAK:
00001E38  324A                    1369      MOVE     A2, A1
00001E3A  6190                    1370      BSR     PRINT
00001E3C                          1371  
00001E3C  43F9 000024D5           1372      LEA     TALK_1, A1
00001E42  6188                    1373      BSR     PRINT
00001E44                          1374      
00001E44  324B                    1375      MOVE    A3, A1
00001E46  6184                    1376      BSR     PRINT
00001E48                          1377      
00001E48  43F9 000024D9           1378      LEA     TALK_2, A1
00001E4E  6100 FF7C               1379      BSR     PRINT
00001E52                          1380      
00001E52  4E75                    1381      RTS
00001E54                          1382  
00001E54                          1383  *-------------------------------------------------------
00001E54                          1384  *-------------------WAIT SUBROUTINE---------------------
00001E54                          1385  *----------------[D1,D2,D3,number: D4]------------------
00001E54                          1386  *                   Waits 1 second
00001E54                          1387  WAIT: *Get start time
00001E54  6100 002A               1388      BSR     GET_MILLISECONDS
00001E58  2401                    1389      MOVE.L  D1,D2
00001E5A                          1390  WAIT_LOOP:
00001E5A  6100 0024               1391      BSR     GET_MILLISECONDS
00001E5E                          1392      
00001E5E  3602                    1393      MOVE    D2,D3
00001E60  9243                    1394      SUB     D3,D1
00001E62                          1395      
00001E62  B27C 0064               1396      CMP     #SECOND,D1
00001E66  63F2                    1397      BLS     WAIT_LOOP
00001E68                          1398  
00001E68  4E75                    1399      RTS
00001E6A                          1400  
00001E6A                          1401  *-------------------------------------------------------
00001E6A                          1402  *----------------TIMED PRINT DOT SUBROUTINE-------------
00001E6A                          1403  *-------------------[D1,D2,D3,number: D4]---------------
00001E6A                          1404  PRINT_DOTS:
00001E6A  43F9 000024D3           1405      LEA     Dot,A1
00001E70                          1406  DOT_NEXT_PRINT: * while (D4 != 0)
00001E70  6100 FF5A               1407      BSR     PRINT
00001E74                          1408      
00001E74  61DE                    1409      BSR     WAIT
00001E76                          1410      
00001E76  5344                    1411      SUB     #1, D4
00001E78  B87C 0000               1412      CMP     #0, D4
00001E7C  66F2                    1413      BNE     DOT_NEXT_PRINT
00001E7E  4E75                    1414      RTS
00001E80                          1415      
00001E80                          1416  GET_MILLISECONDS:
00001E80  103C 0008               1417      MOVE.B #8, D0 # Load
00001E84  4E4F                    1418      TRAP #15  #Time in D1
00001E86  4E75                    1419      RTS
00001E88                          1420  *-------------------------------------------------------
00001E88                          1421  *--------------RANDOM_NUMBER_100 SUBROUTINE-------------
00001E88                          1422  *-------------------------------------------------------
00001E88                          1423  *         Gets a random number between 0 - 100
00001E88                          1424  RANDOM_NUMBER_100:     
00001E88  61F6                    1425      BSR GET_MILLISECONDS
00001E8A                          1426  
00001E8A  C2BC 005FFFFF           1427      AND.L #$5FFFFF, D1 # AND 6 Bits to prevent any overflow
00001E90                          1428  
00001E90  82FC 0064               1429      DIVU #100, D1 #Divide by 100, 1000, 10000 depending on Number range required
00001E94                          1430  
00001E94  4841                    1431      SWAP D1 #SWAP Higher Order Word and Lower Order Word in D1
00001E96                          1432  
00001E96  5241                    1433      ADDQ.W #1, D1 #Add 1 to D1.W so number is at least 1
00001E98                          1434  
00001E98  3401                    1435      MOVE.W D1, D2 #Extract the number from D1.W
00001E9A                          1436  
00001E9A  4281                    1437      CLR.L D1 # Clear contents of D1
00001E9C                          1438  
00001E9C  3202                    1439      MOVE.W D2, D1 #Move the generated number to D1
00001E9E  4E75                    1440      RTS
00001EA0                          1441  *-------------------------------------------------------
00001EA0                          1442  *---------------RANDOM_NUMBER_10 SUBROUTINE-------------
00001EA0                          1443  *-------------------------------------------------------
00001EA0                          1444  *         Gets a random number between 0 - 10
00001EA0                          1445  RANDOM_NUMBER_10:     
00001EA0  61DE                    1446      BSR GET_MILLISECONDS
00001EA2                          1447  
00001EA2  C2BC 0007FFFF           1448      AND.L #$7FFFF, D1 # AND 5 Bits to prevent any overflow
00001EA8                          1449  
00001EA8  82FC 000A               1450      DIVU #10, D1 #Divide by 10
00001EAC                          1451  
00001EAC  4841                    1452      SWAP D1 #SWAP Higher Order Word and Lower Order Word in D1
00001EAE                          1453  
00001EAE  5241                    1454      ADDQ.W #1, D1 #Add 1 to D1.W so number is at least 1
00001EB0                          1455  
00001EB0  3401                    1456      MOVE.W D1, D2 #Extract the number from D1.W
00001EB2                          1457  
00001EB2  4281                    1458      CLR.L D1 # Clear contents of D1
00001EB4                          1459  
00001EB4  3202                    1460      MOVE.W D2, D1 #Move the generated number to D1
00001EB6  4E75                    1461      RTS
00001EB8                          1462  
00001EB8                          1463      
00001EB8                          1464  END:
00001EB8  FFFF FFFF               1465      SIMHALT
00001EBC                          1466  *-------------------------------------------------------
00001EBC                          1467  *-------------------DATA DELARATIONS--------------------
00001EBC                          1468  *-------------------------------------------------------
00001EBC                          1469  
00001EBC= 0D 0A 00                1470  CRLF             DC.B   $0D,$0A,0
00001EBF                          1471  
00001EBF= 3D 3D 3D 3D 3D 3D ...   1472  TITLE            DC.B    '================================================================================'
00001F0F= 0D 0A                   1473                   DC.B   $0D,$0A
00001F11= 20 5F 20 20 5F 5F ...   1474                   DC.B    ' _  ___                 _                   ___   __    ___                _    '
00001F61= 0D 0A                   1475                   DC.B   $0D,$0A
00001F63= 7C 20 7C 2F 20 28 ...   1476                   DC.B    '| |/ (_)_ __   __ _  __| | ___  _ __ ___   / _ \ / _| / _ \__  _____ _ __(_)___ '
00001FB3= 0D 0A                   1477                   DC.B   $0D,$0A
00001FB5= 7C 20 5E 20 2F 7C ...   1478                   DC.B    '| ^ /| | ^_ \ / _` |/ _` |/ _ \| ^_ ` _ \ | | | | |_ | | | \ \/ / _ \ ^__| / __|'
00002005= 0D 0A                   1479                   DC.B   $0D,$0A
00002007= 7C 20 2E 20 5C 7C ...   1480                   DC.B    '| . \| | | | | (_| | (_| | (_) | | | | | || |_| |  _|| |_| |>  <  __/ |  | \__ \'
00002057= 0D 0A                   1481                   DC.B   $0D,$0A
00002059= 7C 5F 7C 5C 5F 5C ...   1482                   DC.B    '|_|\_\_|_| |_|\__, |\__,_|\___/|_| |_| |_| \___/|_|   \___//_/\_\___|_|  |_|___/'
000020A9= 0D 0A                   1483                   DC.B   $0D,$0A
000020AB= 20 20 20 20 20 20 ...   1484                   DC.B    '              |___/                                                             '
000020FB= 0D 0A                   1485                   DC.B   $0D,$0A
000020FD= 3D 3D 3D 3D 3D 3D ...   1486                   DC.B    '================================================================================',0
0000214E= 50 6C 65 61 73 65 ...   1487  enterName       DC.B    'Please enter your name: ',0
00002167                          1488  
00002167= 59 6F 75 72 20 6E ...   1489  name_confirmation_1 DC.B    'Your name is "',0
00002176= 22 20 63 6F 72 72 ...   1490  name_confirmation_2 DC.B    '" correct?'
00002180= 0D 0A                   1491                      DC.B    $0D,$0A
00002182= 0D 09                   1492                      DC.B    $0D,$09
00002184= 31 29 20 59 65 73       1493                      DC.B    '1) Yes'
0000218A= 0D 0A                   1494                      DC.B    $0D,$0A
0000218C= 0D 09                   1495                      DC.B    $0D,$09
0000218E= 32 29 20 4E 6F          1496                      DC.B    '2) No'
00002193= 0D 0A                   1497                      DC.B    $0D,$0A
00002195= 45 6E 74 65 72 20 ...   1498                      DC.B    'Enter your choice) ',0
000021A9                          1499  
000021A9= 50 6C 65 61 73 65 ...   1500  name_length_fail        DC.B    'Please type a name between 3 - 30 length.',0
000021D3= 50 6C 65 61 73 65 ...   1501  name_confirmation_fail  DC.B    'Please type a valid menu option.',0
000021F4                          1502  
000021F4= 57 65 6C 63 6F 6D ...   1503  welcome_string_1       DC.B 'Welcome to the Kingdom of Oxeris, ',0
00002217                          1504  
00002217= 59 6F 75 20 68 61 ...   1505  welcome_string_2        DC.B    'You have immigrated to the Kingdom of Oxeris as your hometown'
00002254= 0D 0A                   1506                          DC.B    $0D,$0A
00002256= 68 61 73 20 62 65 ...   1507                          DC.B    'has been burned down from a conflict',0
0000227B                          1508  
0000227B= 33 20 79 65 61 72 ...   1509  welcome_string_3        DC.B    '3 years later', 0
00002289                          1510  
00002289= 49 74 20 68 61 73 ...   1511  intro_story_string_1    DC.B    'It has been 3 years since I immigrated to'
000022B2= 0D 0A                   1512                  DC.B    $0D,$0A
000022B4= 74 68 65 20 4B 69 ...   1513                  DC.B    'the Kingdom of Oxeris', 0
000022CA                          1514                  
000022CA= 54 68 65 20 6B 69 ...   1515  intro_story_string_2    DC.B    'The king of Oxeris has imposed a tax which forces individuals'
00002307= 0D 0A                   1516                  DC.B    $0D,$0A
00002309= 6F 66 20 74 68 65 ...   1517                  DC.B    'of the kingdom to pay based on their C02 output.', 0
0000233A                          1518  
0000233A= 49 20 61 6D 20 75 ...   1519  intro_story_string_3    DC.B    'I am unsure why he has imposed a tax on CO2'
00002365= 0D 0A                   1520                  DC.B    $0D,$0A
00002367= 69 66 20 69 74 20 ...   1521                  DC.B    'if it is what everybody breaths out!', 0
0000238C                          1522  
0000238C= 49 20 73 68 6F 75 ...   1523  intro_story_string_4    DC.B    'I should make a plan to solve this problem.',0
000023B8                          1524  
000023B8= 3D 3D 3D 3D 3D 3D ...   1525  LINE            DC.B    '================================================================================',0
00002409                          1526  
00002409= 3D 3D 3D 3D 3D 3D ...   1527  GAME_LINES      DC.B    '================================================================================'
00002459= 0D 0A                   1528                  DC.B    $0D,$0A
0000245B= 0D 0A                   1529                  DC.B    $0D,$0A
0000245D= 0D 0A                   1530                  DC.B    $0D,$0A
0000245F= 3D 3D 3D 3D 3D 3D ...   1531                  DC.B    '================================================================================', 0
000024B0                          1532  
000024B0= 4E 61 6D 65 3A 20 00    1533  NAME_LABEL          DC.B    'Name: ',0
000024B7= 4D 6F 6E 65 79 3A ...   1534  MONEY_LABEL          DC.B    'Money: ',0
000024BF= 44 61 79 3A 20 00       1535  DAY_LABEL           DC.B    'Day: ',0
000024C5= 74 65 6D 70 65 72 ...   1536  temperature_LABEL   DC.B    'temperature: ',0
000024D3                          1537          
000024D3= 2E 00                   1538  Dot                 DC.B    '.',0
000024D5= 3A 20 22 00             1539  TALK_1              DC.B    ': "',0
000024D9= 22 00                   1540  TALK_2              DC.B    '"',0
000024DB                          1541  
000024DB= 20 20 20 20 20 20 ...   1542  YOU              DC.B    '             ^JB&@@@@@&&&&BY~.          '
00002503= 0D 0A                   1543                   DC.B   $0D,$0A
00002505= 20 20 20 20 20 20 ...   1544                   DC.B    '           7&@&P7^:.....^75#@@#?.       '
0000252D= 0D 0A                   1545                   DC.B   $0D,$0A
0000252F= 20 20 20 20 20 20 ...   1546                   DC.B    '          G@&:               !#@@5      '
00002557= 0D 0A                   1547                   DC.B   $0D,$0A
00002559= 20 20 20 20 20 20 ...   1548                   DC.B    '         5@&        :7YPPGBGPP#@@@#Y~.  '
00002581= 0D 0A                   1549                   DC.B   $0D,$0A
00002583= 20 20 20 20 20 20 ...   1550                   DC.B    '        :@@~      7#&B5YJJ???~^~~7YB@&? '
000025AB= 0D 0A                   1551                   DC.B   $0D,$0A
000025AD= 20 20 20 20 20 2E ...   1552                   DC.B    '     .:^B@&      ?@&5~:::::::       J&@J'
000025D5= 0D 0A                   1553                   DC.B   $0D,$0A
000025D7= 20 2E 35 23 26 40 ...   1554                   DC.B    ' .5#&@@@@@J      B@GYJ!^^::::^^:::::~&&&'
000025FF= 0D 0A                   1555                   DC.B   $0D,$0A
00002601= 20 47 40 47 3A 2E ...   1556                   DC.B    ' G@G:. !@@:      Y@BYYYY?7!!!~~~!!7?5&@B'
00002629= 0D 0A                   1557                   DC.B   $0D,$0A
0000262B= 2E 40 26 20 20 20 ...   1558                   DC.B    '.@&    .@@.      :&@#G55YYYYYYY55PGB&&B.'
00002653= 0D 0A                   1559                   DC.B   $0D,$0A
00002655= 37 40 42 20 20 20 ...   1560                   DC.B    '7@B    ^@&        .?B#&&#######&&#B&@P  '
0000267D= 0D 0A                   1561                   DC.B   $0D,$0A
0000267F= 47 40 42 20 20 20 ...   1562                   DC.B    'G@B    ~@#            .::^~~~^::.  J@P  '
000026A7= 0D 0A                   1563                   DC.B   $0D,$0A
000026A9= 26 40 47 20 20 20 ...   1564                   DC.B    '&@G    ~@&                         ^@B  '
000026D1= 0D 0A                   1565                   DC.B   $0D,$0A
000026D3= 40 40 47 20 20 20 ...   1566                   DC.B    '@@G    .@&                         7@B  ', 0  
000026FC                          1567  
000026FC= 4B 69 6E 67 00          1568  KING_NAME        DC.B   'King',0
00002701= 20 20 20 20 20 20 ...   1569  KING             DC.B    '            P&G:          ..            '
00002729= 0D 0A                   1570                   DC.B   $0D,$0A
0000272B= 20 20 20 20 20 20 ...   1571                   DC.B    '           :&#&&5.     .!P#G            '
00002753= 0D 0A                   1572                   DC.B   $0D,$0A
00002755= 20 20 20 20 20 20 ...   1573                   DC.B    '           ?&#JP&#?.:?G#&&&7            '
0000277D= 0D 0A                   1574                   DC.B   $0D,$0A
0000277F= 20 20 20 20 20 20 ...   1575                   DC.B    '           B&G..7B&&&#5!P&#.            '
000027A7= 0D 0A                   1576                   DC.B   $0D,$0A
000027A9= 20 20 3A 47 47 50 ...   1577                   DC.B    '  :GGPPYY?5&&?...:~?!...P&B             '
000027D1= 0D 0A                   1578                   DC.B   $0D,$0A
000027D3= 20 20 20 7E 47 26 ...   1579                   DC.B    '   ~G&&&###BG:...      .G&B             '
000027FB= 0D 0A                   1580                   DC.B   $0D,$0A
000027FD= 20 20 20 20 20 3F ...   1581                   DC.B    '     ?#&B55J^....::..:::G&#^.           '
00002825= 0D 0A                   1582                   DC.B   $0D,$0A
00002827= 20 20 20 20 20 20 ...   1583                   DC.B    '      :B&#P555PBB#BBBBB##&&@@#Y:        '
0000284F= 0D 0A                   1584                   DC.B   $0D,$0A
00002851= 20 20 20 20 20 20 ...   1585                   DC.B    '       .B&#B&#5!^.     .::.:J&@@#^      '
00002879= 0D 0A                   1586                   DC.B   $0D,$0A
0000287B= 20 20 20 20 20 20 ...   1587                   DC.B    '        .B&&5.      .^7JY555YP&@@@5^    '
000028A3= 0D 0A                   1588                   DC.B   $0D,$0A
000028A5= 20 20 20 20 20 20 ...   1589                   DC.B    '        .&@#      !#&&##BGGGGP55PB&@&G: '
000028CD= 0D 0A                   1590                   DC.B   $0D,$0A
000028CF= 20 20 20 20 20 20 ...   1591                   DC.B    '        Y@@!     P@@#7::::::.      :G@&^'
000028F7= 0D 0A                   1592                   DC.B   $0D,$0A
000028F9= 20 20 3A 3F 47 23 ...   1593                   DC.B    '  :?G#&@@@@     .@@#P?^:::^^^:::....~&@#'
00002921= 0D 0A                   1594                   DC.B   $0D,$0A
00002923= 20 3F 40 26 4A 37 ...   1595                   DC.B    ' ?@&J77J@@B     .&@#PP5J7~~^^^^^^^~!Y&@&'
0000294B= 0D 0A                   1596                   DC.B   $0D,$0A
0000294D= 20 26 40 2E 20 20 ...   1597                   DC.B    ' &@.    @@?      B@&BPPPPPP555555PPG#@@7'
00002975= 0D 0A                   1598                   DC.B   $0D,$0A
00002977= 7E 40 23 20 20 20 ...   1599                   DC.B    '~@#    .@@~      .G@@&&#BBBBBB##&&&&@#^ '
0000299F= 0D 0A                   1600                   DC.B   $0D,$0A
000029A1= 35 40 42 20 20 20 ...   1601                   DC.B    '5@B    .@@~        .75G##&&&&&#BG5?&@5  '
000029C9= 0D 0A                   1602                   DC.B   $0D,$0A
000029CB= 23 40 50 20 20 20 ...   1603                   DC.B    '#@P    .@@~                        B@G  '
000029F3= 0D 0A                   1604                   DC.B   $0D,$0A
000029F5= 40 40 50 20 20 20 ...   1605                   DC.B    '@@P    .@@~                        G@B  ', 0
00002A1E                          1606  
00002A1E= 53 68 6F 70 20 4B ...   1607  SHOP_KEEPER_NAME DC.B   'Shop Keeper Sam',0
00002A2E= 20 20 20 20 20 20 ...   1608  SHOP_KEEPER      DC.B    '             .^JG&@@@@@@@@&BJ.               '
00002A5B= 0D 0A                   1609                   DC.B   $0D,$0A
00002A5D= 20 20 20 20 20 20 ...   1610                   DC.B    '         .7G&@@@@#PYJ??JYG#@@@7              '
00002A8A= 0D 0A                   1611                   DC.B   $0D,$0A
00002A8C= 20 20 20 20 20 20 ...   1612                   DC.B    '        J@@@&P!.  .YY??JJ?J#&&&B^            '
00002AB9= 0D 0A                   1613                   DC.B   $0D,$0A
00002ABB= 20 20 20 20 20 20 ...   1614                   DC.B    '       .@@@7     :##?^^:^^~:^^5&#            '
00002AE8= 0D 0A                   1615                   DC.B   $0D,$0A
00002AEA= 20 20 20 20 20 20 ...   1616                   DC.B    '        P@@5     G&5^..    ..:~#&7           '
00002B17= 0D 0A                   1617                   DC.B   $0D,$0A
00002B19= 20 20 20 20 20 20 ...   1618                   DC.B    '        ^@@&     !&B!:..   ...:Y&#           '
00002B46= 0D 0A                   1619                   DC.B   $0D,$0A
00002B48= 20 20 20 20 20 20 ...   1620                   DC.B    '         @@@.     #&?^:: ..    ^#&7          '
00002B75= 0D 0A                   1621                   DC.B   $0D,$0A
00002B77= 20 20 20 20 20 20 ...   1622                   DC.B    '         &@@.     Y&P???J?!::::^P&B          '
00002BA4= 0D 0A                   1623                   DC.B   $0D,$0A
00002BA6= 20 20 20 20 20 20 ...   1624                   DC.B    '         #@@?!YPB#@@@@@@@@@@@@@@@@@&B57:     '
00002BD3= 0D 0A                   1625                   DC.B   $0D,$0A
00002BD5= 20 20 20 20 20 20 ...   1626                   DC.B    '      .7P@@@@@@&BG55YJ?77~~^^~~~7JYPB&@@@P.  '
00002C02= 0D 0A                   1627                   DC.B   $0D,$0A
00002C04= 20 20 20 2E 59 26 ...   1628                   DC.B    '   .Y&@@@&G7: .^JG#&&@@@@&@&&B5!:      ^@@&  '
00002C31= 0D 0A                   1629                   DC.B   $0D,$0A
00002C33= 20 20 21 40 40 40 ...   1630                   DC.B    '  !@@@G^.    Y&@@&BJ!~:::^~75#@@@@B~   .@@@  '
00002C60= 0D 0A                   1631                   DC.B   $0D,$0A
00002C62= 20 7E 40 40 40 7E ...   1632                   DC.B    ' ~@@@~     .&@@Y.              .?#@@&7!@@@!  '
00002C8F= 0D 0A                   1633                   DC.B   $0D,$0A
00002C91= 20 7E 40 40 40 47 ...   1634                   DC.B    ' ~@@@G!.  .&@@:        .:~7?55YYY5&@@@@@#:   '
00002CBE= 0D 0A                   1635                   DC.B   $0D,$0A
00002CC0= 20 20 2E 3F 23 40 ...   1636                   DC.B    '  .?#@@@@&&@@!       7B&@&&&&########&&@&B7  '
00002CED= 0D 0A                   1637                   DC.B   $0D,$0A
00002CEF= 20 20 20 20 20 20 ...   1638                   DC.B    '      .^7B@@#      .#@@#J~^^^^^^.     .^5@@B.'
00002D1C= 0D 0A                   1639                   DC.B   $0D,$0A
00002D1E= 20 20 20 20 2E 3A ...   1640                   DC.B    '    .:~7?#@@7      B@&B5^::^^^^^:...    .5@@G'
00002D4B= 0D 0A                   1641                   DC.B   $0D,$0A
00002D4D= 20 20 59 26 40 40 ...   1642                   DC.B    '  Y&@@@@@@@@.      &@&PPY!^^::::^^^^^::::J@@&'
00002D7A= 0D 0A                   1643                   DC.B   $0D,$0A
00002D7C= 20 3F 40 26 5E 2E ...   1644                   DC.B    ' ?@&^.  .@@#       B@&GPPPPY?7!!~~~~!!7?YG&@&'
00002DA9= 0D 0A                   1645                   DC.B   $0D,$0A
00002DAB= 20 26 40 7E 20 20 ...   1646                   DC.B    ' &@~    .@@P       ~@@&BGPPPPPPPPPPPPPGG#&@&~'
00002DD8= 0D 0A                   1647                   DC.B   $0D,$0A
00002DDA= 5E 40 40 2E 20 20 ...   1648                   DC.B    '^@@.    .@@?        !#@@&&##BBBBBB##&&&@@@P. '
00002E07= 0D 0A                   1649                   DC.B   $0D,$0A
00002E09= 4A 40 40 2E 20 20 ...   1650                   DC.B    'J@@.    ^@@!          ^?PB#&&&&&&&&#BPJY@@7  '
00002E36= 0D 0A                   1651                   DC.B   $0D,$0A
00002E38= 42 40 40 20 20 20 ...   1652                   DC.B    'B@@     ^@@!                           .@@?  '
00002E65= 0D 0A                   1653                   DC.B   $0D,$0A
00002E67= 26 40 40 20 20 20 ...   1654                   DC.B    '&@@     ^@@!                            @@Y  ', 0
00002E95                          1655  
00002E95= 20 20 20 20 20 20 ...   1656  CASTLE           DC.B    '                                  |>>>'
00002EBB= 0D 0A                   1657                   DC.B   $0D,$0A
00002EBD= 20 20 20 20 20 20 ...   1658                   DC.B    '                                  |'
00002EE0= 0D 0A                   1659                   DC.B   $0D,$0A
00002EE2= 20 20 20 20 20 20 ...   1660                   DC.B    '                    |>>>      _  _|_  _         |>>>'
00002F16= 0D 0A                   1661                   DC.B   $0D,$0A
00002F18= 20 20 20 20 20 20 ...   1662                   DC.B    '                    |        |;| |;| |;|        |'
00002F49= 0D 0A                   1663                   DC.B   $0D,$0A
00002F4B= 20 20 20 20 20 20 ...   1664                   DC.B    '                _  _|_  _    \\.    .  /    _  _|_  _'
00002F80= 0D 0A                   1665                   DC.B   $0D,$0A
00002F82= 20 20 20 20 20 20 ...   1666                   DC.B    '               |;|_|;|_|;|    \\:. ,  /    |;|_|;|_|;|'
00002FB8= 0D 0A                   1667                   DC.B   $0D,$0A
00002FBA= 20 20 20 20 20 20 ...   1668                   DC.B    '               \\..      /    ||;   . |    \\.    .  /'
00002FF0= 0D 0A                   1669                   DC.B   $0D,$0A
00002FF2= 20 20 20 20 20 20 ...   1670                   DC.B    '                \\.  ,  /     ||:  .  |     \\:  .  /'
00003027= 0D 0A                   1671                   DC.B   $0D,$0A
00003029= 20 20 20 20 20 20 ...   1672                   DC.B    '                 ||:   |_   _ ||_ . _ | _   _||:   |'
0000305D= 0D 0A                   1673                   DC.B   $0D,$0A
0000305F= 20 20 20 20 20 20 ...   1674                   DC.B    '                 ||:  .|||_|;|_|;|_|;|_|;|_|;||:.  |'
00003093= 0D 0A                   1675                   DC.B   $0D,$0A
00003095= 20 20 20 20 20 20 ...   1676                   DC.B    '                 ||:   ||.    .     .      . ||:  .|'
000030C9= 0D 0A                   1677                   DC.B   $0D,$0A
000030CB= 20 20 20 20 20 20 ...   1678                   DC.B    '                 ||: . || .     . .   .  ,   ||:   |       \,/'
00003109= 0D 0A                   1679                   DC.B   $0D,$0A
0000310B= 20 20 20 20 20 20 ...   1680                   DC.B    '                 ||:   ||:  ,  _______   .   ||: , |            /`\'
0000314E= 0D 0A                   1681                   DC.B   $0D,$0A
00003150= 20 20 20 20 20 20 ...   1682                   DC.B    '                 ||:   || .   /+++++++\    . ||:   |'
00003184= 0D 0A                   1683                   DC.B   $0D,$0A
00003186= 20 20 20 20 20 20 ...   1684                   DC.B    '                 ||:   ||.    |+++++++| .    ||: . |'
000031BA= 0D 0A                   1685                   DC.B   $0D,$0A
000031BC= 20 20 20 20 20 20 ...   1686                   DC.B    '              __ ||: . ||: ,  |+++++++|.  . _||_   |'
000031F0= 0D 0A                   1687                   DC.B   $0D,$0A
000031F2= 20 20 20 20 20 5F ...   1688                   DC.B    '     ____--`~    `--~~__|.    |+++++__|----~    ~`---,              ___'
00003239= 0D 0A                   1689                   DC.B   $0D,$0A
0000323B= 2D 7E 2D 2D 7E 20 ...   1690                   DC.B    '-~--~                   ~---__|,--~`                  ~~----_____-~`   `~----~~', 0
0000328B                          1691                   
0000328B= 57 68 61 74 20 77 ...   1692  mainChoice      DC.B    'What would you like to do?'
000032A5= 0D 0A                   1693                  DC.B    $0D,$0A
000032A7= 31 29 20 47 6F 20 ...   1694                  DC.B    '1) Go to work and earn $75'
000032C1= 0D 0A                   1695                  DC.B    $0D,$0A
000032C3= 32 29 20 45 6E 74 ...   1696                  DC.B    '2) Enter the Town'
000032D4= 0D 0A                   1697                  DC.B    $0D,$0A
000032D6= 33 29 20 53 6C 65 ...   1698                  DC.B    '3) Sleep and end the day'
000032EE= 0D 0A                   1699                  DC.B    $0D,$0A
000032F0= 45 6E 74 65 72 20 ...   1700                  DC.B    'Enter your choice) ',0
00003304                          1701  
00003304= 5A 7A 5A 7A 5A 7A ...   1702  sleep_string    DC.B    'ZzZzZzZzZz',0
0000330F= 59 6F 75 20 73 65 ...   1703  sleep_increment_co2_string_1 DC.B    'You sense that theres an extra ',0
0000332F= 20 43 4F 32 20 69 ...   1704  sleep_increment_co2_string_2 DC.B    ' CO2 in the air',0
0000333F                          1705  
0000333F= 59 6F 75 20 77 6F ...   1706  sleep_alarm_day              DC.B    'You woke up early because of your alarm!',0
00003368= 59 6F 75 20 73 74 ...   1707  sleep_coffee_day             DC.B    'You start your day consuming the coffee.',0
00003391                          1708  
00003391= 59 6F 75 72 20 00       1709  your    DC.B    'Your ',0
00003397= 20 61 6E 64 20 72 ...   1710  and     DC.B    ' and removed ',0 
000033A5= 20 43 4F 32 20 74 ...   1711  from_air    DC.B    ' CO2 total from the air',0
000033BD                          1712  
000033BD= 20 78 20 57 61 74 ...   1713  sleep_watermill_produce     DC.B    ' x Water Mills have given $',0
000033D9= 20 78 20 53 6F 6C ...   1714  sleep_solarpanel_produce    DC.B    ' x Solar Panels have given $',0
000033F6                          1715  
000033F6= 57 68 61 74 20 77 ...   1716  cityChoice      DC.B    'What would you like to do in the town?'
0000341C= 0D 0A                   1717                  DC.B    $0D,$0A
0000341E= 31 29 20 56 69 73 ...   1718                  DC.B    '1) Visit the General Store'
00003438= 0D 0A                   1719                  DC.B    $0D,$0A
0000343A= 32 29 20 45 78 70 ...   1720                  DC.B    '2) Explore the Town'
0000344D= 0D 0A                   1721                  DC.B    $0D,$0A
0000344F= 33 29 20 4D 61 6E ...   1722                  DC.B    '3) Manage your items'
00003463= 0D 0A                   1723                  DC.B    $0D,$0A
00003465= 34 29 20 45 78 69 ...   1724                  DC.B    '4) Exit the Town'
00003475= 0D 0A                   1725                  DC.B    $0D,$0A
00003477= 45 6E 74 65 72 20 ...   1726                  DC.B    'Enter your choice) ',0
0000348B                          1727  
0000348B                          1728  
0000348B= 48 65 6C 6C 6F 20 00    1729  shop_string_1           DC.B    'Hello ',0
00003492= 2C 20 79 6F 75 20 ...   1730  shop_string_2           DC.B    ', you are free to have a look around my store.',0
000034C1= 0D 0A                   1731  shop_string_3           DC.B    $0D,$0A
000034C3= 31 29 20 42 72 6F ...   1732                          DC.B    '1) Browse around the shop'
000034DC= 0D 0A                   1733                          DC.B    $0D,$0A
000034DE= 32 29 20 53 65 6C ...   1734                          DC.B    '2) Sell items to the shop'
000034F7= 0D 0A                   1735                          DC.B    $0D,$0A
000034F9= 33 29 20 45 78 69 ...   1736                          DC.B    '3) Exit the Shop'
00003509= 0D 0A                   1737                          DC.B    $0D,$0A
0000350B= 45 6E 74 65 72 20 ...   1738                          DC.B    'Enter your choice) ',0
0000351F                          1739                          
0000351F= 54 68 65 72 65 20 ...   1740  shop_browse_1           DC.B    'There is a selection of items that caught your interest:'
00003557= 0D 0A                   1741                          DC.B    $0D,$0A
00003559= 31 29 20 41 6C 61 ...   1742                          DC.B    '1) Alarm Clock : $',0
0000356C= 0D 0A                   1743  shop_browse_2           DC.B    $0D,$0A
0000356E= 32 29 20 57 61 74 ...   1744                          DC.B    '2) Water Mill : $',0
00003580= 0D 0A                   1745  shop_browse_3           DC.B    $0D,$0A
00003582= 33 29 20 53 6F 6C ...   1746                          DC.B    '3) Solar Panel : $',0
00003595= 0D 0A                   1747  shop_browse_4           DC.B    $0D,$0A
00003597= 34 29 20 53 77 6F ...   1748                          DC.B    '4) Sword : $',0
000035A4= 0D 0A                   1749  shop_browse_5           DC.B    $0D,$0A
000035A6= 35 29 20 43 6F 66 ...   1750                          DC.B    '5) Coffee : $',0
000035B4= 0D 0A                   1751  shop_browse_6           DC.B    $0D,$0A
000035B6= 36 29 20 45 78 69 ...   1752                          DC.B    '6) Exit Browse'
000035C4= 0D 0A                   1753                          DC.B    $0D,$0A
000035C6= 45 6E 74 65 72 20 ...   1754                          DC.B    'Enter your choice) ',0
000035DA                          1755  
000035DA                          1756  
000035DA= 59 6F 75 20 68 61 ...   1757  shop_unable_buy_string_1: DC.B    'You have ',0
000035E4= 20 63 61 73 68 2E ...   1758  shop_unable_buy_string_2: DC.B    ' cash. You need ',0
000035F5= 20 6D 6F 72 65 20 ...   1759  shop_unable_buy_string_3: DC.B    ' more cash to purchase this item.',0
00003617                          1760  
00003617= 59 6F 75 20 61 6C ...   1761  shop_already_have_string:  DC.B    'You already have this item.',0
00003633                          1762  
00003633= 57 65 6C 63 6F 6D ...   1763  shop_intro_string_1           DC.B    'Welcome to my Store, my name is ',0
00003654= 21                      1764  shop_intro_string_2           DC.B    '!' 
00003655= 0D 0A                   1765                                DC.B    $0D,$0A
00003657= 49 20 73 65 6C 6C ...   1766                                DC.B    'I sell items that could be used to reduce your CO2 output.',0
00003692                          1767  
00003692= 41 72 65 20 79 6F ...   1768  shop_confirm_string DC.B    'Are you sure that you want to buy this item for $',0
000036C4= 0D 0A                   1769  YES_NO              DC.B    $0D,$0A
000036C6= 0D 09                   1770                      DC.B    $0D,$09
000036C8= 31 29 20 59 65 73       1771                      DC.B    '1) Yes'
000036CE= 0D 0A                   1772                      DC.B    $0D,$0A
000036D0= 0D 09                   1773                      DC.B    $0D,$09
000036D2= 32 29 20 4E 6F          1774                      DC.B    '2) No'
000036D7= 0D 0A                   1775                      DC.B    $0D,$0A
000036D9= 45 6E 74 65 72 20 ...   1776                      DC.B    'Enter your choice) ',0
000036ED= 54 68 61 6E 6B 20 ...   1777  shop_thank_string   DC.B    'Thank you for buying this item!',0
0000370D= 53 6F 72 72 79 20 ...   1778  shop_unable_string   DC.B    'Sorry I am currently not buying goods from individuals!',0
00003745                          1779  
00003745= 54 68 65 20 72 6F ...   1780  explore_1       DC.B    'The road to town is currently blocked by a sign to wait until for construction.'
00003794= 0D 0A                   1781                  DC.B    $0D,$0A
00003796= 74 6F 20 66 69 6E ...   1782                  DC.B    'to finish in ',0
000037A4= 20 64 61 79 73 2E 00    1783  explore_2       DC.B    ' days.',0
000037AB                          1784  
000037AB                          1785                  
000037AB= 59 6F 75 20 6E 6F ...   1786  explore_castle_out_string  DC.B    'You notice a castle in the distance',0
000037CF= 53 68 6F 75 6C 64 ...   1787  explore_option_out  DC.B    'Should you go visit the castle?'
000037EE= 0D 0A                   1788                      DC.B    $0D,$0A
000037F0= 0D 09                   1789                      DC.B    $0D,$09
000037F2= 31 29 20 59 65 73       1790                      DC.B    '1) Yes'
000037F8= 0D 0A                   1791                      DC.B    $0D,$0A
000037FA= 0D 09                   1792                      DC.B    $0D,$09
000037FC= 32 29 20 4E 6F          1793                      DC.B    '2) No'
00003801= 0D 0A                   1794                      DC.B    $0D,$0A
00003803= 45 6E 74 65 72 20 ...   1795                      DC.B    'Enter your choice) ',0
00003817= 59 6F 75 20 77 61 ...   1796  explore_story_message_1 DC.B    'You walk into the empty castle with no guards around.',0
0000384D= 49 20 77 6F 6E 64 ...   1797  explore_you_message_1   DC.B    'I wonder if this castle is empty.',0
0000386F= 59 6F 75 20 77 61 ...   1798  explore_story_message_2 DC.B    'You walk around the castle eventually reaching the throne room.',0
000038AF= 59 6F 75 20 73 70 ...   1799  explore_story_message_3 DC.B    'You spot the King of Oxeris sitting on the throne by himself crying..',0
000038F5= 48 65 6C 6C 6F 20 ...   1800  explore_king_message_1  DC.B    'Hello adventurer...',0
00003909= 49 6D 20 74 68 65 ...   1801  explore_king_message_2  DC.B    'Im the King of Oxeris and I have done a mistake!',0
0000393A= 57 68 61 74 20 68 ...   1802  explore_you_message_2   DC.B    'What have you done to make a mistake?!',0
00003961= 49 20 68 61 76 65 ...   1803  explore_king_message_3  DC.B    'I have ordered my workers to mine into a volcano releasing CO2.',0
000039A1= 57 68 79 20 77 6F ...   1804  explore_you_message_3   DC.B    'Why would you do that!?',0
000039B9= 49 20 74 68 6F 75 ...   1805  explore_king_message_4  DC.B    'I thought that the volcano would give the Kingdom all the energy it'
000039FC= 0D 0A                   1806                          DC.B    $0D,$0A
000039FE= 77 6F 75 6C 64 20 ...   1807                          DC.B    'would ever need!',0
00003A0F= 44 6F 20 79 6F 75 ...   1808  explore_you_message_4   DC.B    'Do you have any plan to solve this?',0
00003A33= 49 20 68 61 76 65 ...   1809  explore_king_message_5  DC.B    'I have no idea how to solve this problem"',0
00003A5D= 53 68 6F 75 6C 64 ...   1810  explore_option_in   DC.B    'Should I go slay the king?'
00003A77= 0D 0A                   1811                      DC.B    $0D,$0A
00003A79= 0D 09                   1812                      DC.B    $0D,$09
00003A7B= 31 29 20 59 65 73       1813                      DC.B    '1) Yes'
00003A81= 0D 0A                   1814                      DC.B    $0D,$0A
00003A83= 0D 09                   1815                      DC.B    $0D,$09
00003A85= 32 29 20 4E 6F          1816                      DC.B    '2) No'
00003A8A= 0D 0A                   1817                      DC.B    $0D,$0A
00003A8C= 45 6E 74 65 72 20 ...   1818                      DC.B    'Enter your choice) ',0
00003AA0= 59 6F 75 20 6C 65 ...   1819  explore_story_message_leave    DC.B    'You leave the castle.',0
00003AB6                          1820  
00003AB6= 57 68 61 74 20 73 ...   1821  manage_browse      DC.B    'What should I manage?:'
00003ACC= 0D 0A                   1822                            DC.B    $0D,$0A
00003ACE= 31 29 20 45 78 69 ...   1823                            DC.B    '1) Exit Browse',0
00003ADD= 32 29 20 41 6C 61 ...   1824  manage_browse_alarm    DC.B    '2) Alarm Clock',0
00003AEC= 33 29 20 57 61 74 ...   1825  manage_browse_water    DC.B    '3) Water Mill',0
00003AFA= 34 29 20 53 6F 6C ...   1826  manage_browse_solar    DC.B    '4) Solar Panel',0
00003B09= 35 29 20 53 77 6F ...   1827  manage_browse_sword    DC.B    '5) Sword',0
00003B12= 36 29 20 43 6F 66 ...   1828  manage_browse_coffee    DC.B    '6) Coffee',0
00003B1C= 45 6E 74 65 72 20 ...   1829  manage_browse_choice    DC.B    'Enter your choice) ',0
00003B30                          1830  
00003B30= 54 68 69 73 20 61 ...   1831  manage_info_string_alarm    DC.B    'This alarm clock allows you to wake up earlier',0
00003B5F= 57 61 74 65 72 20 ...   1832  manage_info_string_water    DC.B    'Water Mills are a cheap and reliable CO2 reducer.',0
00003B91= 53 6F 6C 61 72 20 ...   1833  manage_info_string_solar    DC.B    'Solar Panels are expensive but are efficient at removing CO2.',0
00003BCF= 54 68 65 20 73 77 ...   1834  manage_info_string_sword    DC.B    'The sword is used to slay your enemies.',0
00003BF7= 43 6F 66 66 65 65 ...   1835  manage_info_string_coffee   DC.B    'Coffee allows you to stay awake longer.',0
00003C1F                          1836  
00003C1F= 59 6F 75 20 63 75 ...   1837  manage_default_amount_string        DC.B    'You currently have ',0
00003C33= 78 20 57 61 74 65 ...   1838  manage_default_amount_waterMill     DC.B    'x Water Mills',0
00003C41= 78 20 53 6F 6C 61 ...   1839  manage_default_amount_solarPanel    DC.B    'x Solar Panels',0
00003C50                          1840  
00003C50= 57 6F 72 6B 69 6E ...   1841  work_string     DC.B    'Working', 0 
00003C58= 59 6F 75 20 61 72 ...   1842  work_tired_string   DC.B    'You are too tired to work right now',0
00003C7C= 50 72 65 73 73 20 ...   1843  PAUSE           DC.B    'Press enter to continue . . .', 0
00003C9A                          1844  
00003C9A= 42 72 72 72 2E 2E 2E    1845  temperature_warning_zero    DC.B    'Brrr...'
00003CA1= 0D 0A                   1846                              DC.B    $0D,$0A
00003CA3= 49 74 73 20 66 72 ...   1847                              DC.B    'Its freezing, the temperature cant go lower than this.',0
00003CDA= 46 65 65 6C 73 20 ...   1848  temperature_warning_first   DC.B    'Feels quite warmer than before.'
00003CF9= 0D 0A                   1849                              DC.B    $0D,$0A
00003CFB= 49 20 73 68 6F 75 ...   1850                              DC.B    'I should get some water mills or solar panels',0
00003D29= 4D 61 79 62 65 20 ...   1851  temperature_warning_second  DC.B    'Maybe the tax on CO2 was a good idea',0
00003D4E= 49 74 73 20 52 45 ...   1852  temperature_warning_third   DC.B    'Its REALLY getting hot in here.'
00003D6D= 0D 0A                   1853                              DC.B    $0D,$0A
00003D6F= 49 20 64 6F 6E 74 ...   1854                              DC.B    'I dont think I can stand much longer at 45C',0
00003D9B                          1855  
00003D9B= 59 6F 75 20 68 61 ...   1856  end_game_lose_string        DC.B    'You have succumbed the heat of the Kingdom',0
00003DC6= 59 6F 75 20 68 61 ...   1857  end_game_neutral_1   DC.B    'You have slayed the King of Oxeris',0
00003DE9= 48 6F 77 65 76 65 ...   1858  end_game_neutral_2   DC.B    'However the guards have arrested you and put you into prison',0
00003E26                          1859  
00003E26= 47 41 4D 45 20 4F ...   1860  end_gameover         DC.B    'GAME OVER!',0
00003E31                          1861  
00003E32= 596F 7520 6861 7...     1862  end_game_details_1   DC.W    'You have survived for ',0
00003E4A= 2064 6179 7320 7...     1863  end_game_details_2   DC.W    ' days with $',0
00003E58= 5761 7465 7220 4...     1864  end_game_details_3   DC.W    'Water Mills: ',0
00003E68= 536F 6C61 7220 5...     1865  end_game_details_4   DC.W    'Solar Panels: ',0
00003E78                          1866  
00003E78                          1867  name            DS.W    30  *Max length of name can be 30
00003EB4                          1868  money           DS.W    1   *PLAYER money in hundreds
00003EB6                          1869  day             DS.W    1   *DAYS PASSED
00003EB8                          1870  
00003EB8                          1871  dayCounter     DS.W    1   *INCREASED FROM 3 TO 4 IF ALARM
00003EBA                          1872  CO2_daily      DS.W    1
00003EBC                          1873  
00003EBC                          1874  temperature     DS.W    1   * Default = 15 C
00003EBE                          1875  CO2_level       DS.W    1   * Default = 4000 ppm or 0.00375 per CO2
00003EC0                          1876  
00003EC0                          1877  * Amount
00003EC0                          1878  waterMillCount    DS.W    1
00003EC2                          1879  solarPanelCount   DS.W    1
00003EC4                          1880  * Booleans
00003EC4                          1881  visitedShop    DS.B    1   *Check if you visited shop before
00003EC5                          1882  hasAlarm       DS.B    1
00003EC6                          1883  hasSword       DS.B    1
00003EC7                          1884  hasCoffee      DS.B    1
00003EC8                          1885  temperatureFirstWarning DS.B    1
00003EC9                          1886  temperatureSecondWarning DS.B   1
00003ECA                          1887  visitedCastle  DS.B    1
00003ECB                          1888  *
00003ECB                          1889  
00003ECB                          1890  *
00003ECB                          1891  *-------------------------------------------------------
00003ECB                          1892  *VALIDATION VALUES TO BE USED
00003ECB                          1893  *-------------------------------------------------------
00003ECB  =0000004B               1894  SALARY    EQU 75
00003ECB  =00000064               1895  STARTING_CASH     EQU 100
00003ECB  =00000064               1896  SECOND  EQU 100
00003ECB                          1897  
00003ECB  =00000003               1898  DAY_COUNTER_INCREMENT EQU 3
00003ECB                          1899  
00003ECB  =00000002               1900  ALARM_DAY_COUNTER_BUFF EQU 2
00003ECB  =00000001               1901  COFFEE_DAY_COUNTER_BUFF EQU 1
00003ECB                          1902  
00003ECB                          1903  * ITEMS
00003ECB  =00000014               1904  ALARM_COST          EQU 20
00003ECB  =000000C8               1905  WATER_MILL_COST     EQU 200
00003ECB  =000003E8               1906  SOLAR_PANEL_COST    EQU 1000
00003ECB  =00000032               1907  SWORD_COST          EQU 50
00003ECB  =0000000C               1908  COFFEE_COST         EQU 12
00003ECB                          1909  
00003ECB                          1910  * CO2 Reducers
00003ECB  =0000000A               1911  WATER_MILL_REDUCTION    EQU 10
00003ECB  =00000023               1912  SOLAR_PANEL_REDUCTION   EQU 35
00003ECB                          1913  
00003ECB  =00000002               1914  WATER_MILL_REDUCTION_OVERALL    EQU 2
00003ECB  =00000014               1915  SOLAR_PANEL_REDUCTION_OVERALL   EQU 20
00003ECB                          1916  
00003ECB                          1917  * CO2 Money Givers
00003ECB  =00000006               1918  WATER_MILL_MONEY    EQU 6
00003ECB  =0000001C               1919  SOLAR_PANEL_MONEY   EQU 28
00003ECB                          1920  
00003ECB                          1921  * Temperature Thresholds
00003ECB  =00000005               1922  TEMP_THRESHOLD_ZERO   EQU 5
00003ECB  =00000010               1923  TEMP_THRESHOLD_FIRST   EQU 16
00003ECB  =00000018               1924  TEMP_THRESHOLD_SECOND  EQU 24
00003ECB  =0000001F               1925  TEMP_THRESHOLD_THIRD   EQU 31
00003ECB                          1926  * Other
00003ECB  =00000008               1927  CONSTRUCTION_FINISH    EQU  8
00003ECB                          1928  
00003ECB                          1929      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_DAY_COUNTER     120A
ADD_DAY_COUNTER_END  1224
ALARM_CLOCK         17F4
ALARM_COST          14
ALARM_DAY_COUNTER_BUFF  2
ALREADY_HAVE_ITEM   17DE
AND                 3397
ATTEMPT_BUY_SINGLE_ITEM  17B8
BROWSE_SHOP         1718
CASTLE              2E95
CITY                155C
CITYCHOICE          33F6
CLEAR_INPUT_NAME    10AA
CLEAR_SCREEN        1DC0
CO2_DAILY           3EBA
CO2_LEVEL           3EBE
CO2_REDUCER         1226
CO2_REDUCER_END     12A2
COFFEE              188A
COFFEE_COST         C
COFFEE_DAY_COUNTER_BUFF  1
CONFIRM_SHOP        1766
CONSTRUCTION_FINISH  8
CRLF                1EBC
DAY                 3EB6
DAYCOUNTER          3EB8
DAY_COUNTER_INCREMENT  3
DAY_LABEL           24BF
DISPLAY             1474
DISPLAY_END_DAY     1300
DOT                 24D3
DOT_NEXT_PRINT      1E70
END                 1EB8
ENDL                1DFC
END_DAY             12D2
END_GAMEOVER        3E26
END_GAME_DETAILS_1  3E32
END_GAME_DETAILS_2  3E4A
END_GAME_DETAILS_3  3E58
END_GAME_DETAILS_4  3E68
END_GAME_DISPLAY    1D3C
END_GAME_LOSE       1D0A
END_GAME_LOSE_STRING  3D9B
END_GAME_NEUTRAL    1D18
END_GAME_NEUTRAL_1  3DC6
END_GAME_NEUTRAL_2  3DE9
ENTERNAME           214E
EXPLORE             18BE
EXPLORE_1           3745
EXPLORE_2           37A4
EXPLORE_CASTLE_IN   1978
EXPLORE_CASTLE_IN_INPUT  1AA8
EXPLORE_CASTLE_IN_LEAVE  1ADE
EXPLORE_CASTLE_OUT  1906
EXPLORE_CASTLE_OUT_STRING  37AB
EXPLORE_KING_MESSAGE_1  38F5
EXPLORE_KING_MESSAGE_2  3909
EXPLORE_KING_MESSAGE_3  3961
EXPLORE_KING_MESSAGE_4  39B9
EXPLORE_KING_MESSAGE_5  3A33
EXPLORE_OPTION_IN   3A5D
EXPLORE_OPTION_OUT  37CF
EXPLORE_STORY_MESSAGE_1  3817
EXPLORE_STORY_MESSAGE_2  386F
EXPLORE_STORY_MESSAGE_3  38AF
EXPLORE_STORY_MESSAGE_LEAVE  3AA0
EXPLORE_SUB_END     18DA
EXPLORE_YOU_MESSAGE_1  384D
EXPLORE_YOU_MESSAGE_2  393A
EXPLORE_YOU_MESSAGE_3  39A1
EXPLORE_YOU_MESSAGE_4  3A0F
FIRST_TIME_SHOP     161C
FROM_AIR            33A5
GAME_LINES          2409
GAME_LOOP           13CC
GET_MILLISECONDS    1E80
GET_TEMPERATURE     12A4
GET_TEMPERATURE_END  12C2
HASALARM            3EC5
HASCOFFEE           3EC7
HASSWORD            3EC6
INITIALIZE          1018
INPUT_INT           1DDC
INPUT_NAME          10AE
INPUT_NAME_LENGTH_ERROR  1116
INPUT_NAME_LOOP     10E0
INPUT_NAME_MENU_ERROR  112E
INTRO_STORY_STRING_1  2289
INTRO_STORY_STRING_2  22CA
INTRO_STORY_STRING_3  233A
INTRO_STORY_STRING_4  238C
KING                2701
KING_NAME           26FC
LINE                23B8
MAINCHOICE          328B
MANAGE              1AFC
MANAGE_ALARM_END    1B38
MANAGE_ALARM_INPUT  1BFE
MANAGE_BROWSE       3AB6
MANAGE_BROWSE_ALARM  3ADD
MANAGE_BROWSE_CHOICE  3B1C
MANAGE_BROWSE_COFFEE  3B12
MANAGE_BROWSE_SOLAR  3AFA
MANAGE_BROWSE_SWORD  3B09
MANAGE_BROWSE_WATER  3AEC
MANAGE_COFFEE_END   1BB8
MANAGE_COFFEE_INPUT  1CE2
MANAGE_DEFAULT_AMOUNT_SOLARPANEL  3C41
MANAGE_DEFAULT_AMOUNT_STRING  3C1F
MANAGE_DEFAULT_AMOUNT_WATERMILL  3C33
MANAGE_INFO_STRING_ALARM  3B30
MANAGE_INFO_STRING_COFFEE  3BF7
MANAGE_INFO_STRING_SOLAR  3B91
MANAGE_INFO_STRING_SWORD  3BCF
MANAGE_INFO_STRING_WATER  3B5F
MANAGE_SOLAR_END    1B78
MANAGE_SOLAR_INPUT  1C70
MANAGE_SWORD_END    1B98
MANAGE_SWORD_INPUT  1CBA
MANAGE_WATER_END    1B58
MANAGE_WATER_INPUT  1C26
MONEY               3EB4
MONEY_LABEL         24B7
NAME                3E78
NAME_CONFIRMATION_1  2167
NAME_CONFIRMATION_2  2176
NAME_CONFIRMATION_FAIL  21D3
NAME_LABEL          24B0
NAME_LENGTH_FAIL    21A9
NOT_SET_0_D5        1252
NOT_SET_0_D7        1266
PAUSE               3C7C
PRINT               1DCC
PRINT_DOTS          1E6A
PRINT_INT           1DD4
PRINT_SHOP          167A
PURCHASED_ITEM_SHOP  179C
RANDOM_NUMBER_10    1EA0
RANDOM_NUMBER_100   1E88
SALARY              4B
SECOND              64
SELL_ITEM_SHOP      18A4
SHOP                1596
SHOP_ALREADY_HAVE_STRING  3617
SHOP_BROWSE_1       351F
SHOP_BROWSE_2       356C
SHOP_BROWSE_3       3580
SHOP_BROWSE_4       3595
SHOP_BROWSE_5       35A4
SHOP_BROWSE_6       35B4
SHOP_CONFIRM_STRING  3692
SHOP_INTRO_STRING_1  3633
SHOP_INTRO_STRING_2  3654
SHOP_KEEPER         2A2E
SHOP_KEEPER_NAME    2A1E
SHOP_STRING_1       348B
SHOP_STRING_2       3492
SHOP_STRING_3       34C1
SHOP_THANK_STRING   36ED
SHOP_UNABLE_BUY_STRING_1  35DA
SHOP_UNABLE_BUY_STRING_2  35E4
SHOP_UNABLE_BUY_STRING_3  35F5
SHOP_UNABLE_STRING  370D
SHOW_ASCII          1E26
SLEEP_ALARM_DAY     333F
SLEEP_COFFEE_DAY    3368
SLEEP_INCREMENT_CO2_STRING_1  330F
SLEEP_INCREMENT_CO2_STRING_2  332F
SLEEP_SOLARPANEL_PRODUCE  33D9
SLEEP_STRING        3304
SLEEP_WATERMILL_PRODUCE  33BD
SOLARPANELCOUNT     3EC2
SOLAR_PANEL         183C
SOLAR_PANEL_COST    3E8
SOLAR_PANEL_MONEY   1C
SOLAR_PANEL_REDUCTION  23
SOLAR_PANEL_REDUCTION_OVERALL  14
SPEAK               1E38
SPEAKING_ASCII      1E12
SPLASH              1092
START               1000
STARTING_CASH       64
STORY               11D4
SWORD               1870
SWORD_COST          32
SYSTEM_PAUSE        1DE4
TALK_1              24D5
TALK_2              24D9
TEMPERATURE         3EBC
TEMPERATUREFIRSTWARNING  3EC8
TEMPERATURESECONDWARNING  3EC9
TEMPERATURE_LABEL   24C5
TEMPERATURE_WARNING_CONTINUE  1444
TEMPERATURE_WARNING_CONTINUE_L  1460
TEMPERATURE_WARNING_END  1412
TEMPERATURE_WARNING_FIRST  3CDA
TEMPERATURE_WARNING_LESS  1458
TEMPERATURE_WARNING_MORE  143C
TEMPERATURE_WARNING_SECOND  3D29
TEMPERATURE_WARNING_THIRD  3D4E
TEMPERATURE_WARNING_ZERO  3C9A
TEMP_THRESHOLD_FIRST  10
TEMP_THRESHOLD_SECOND  18
TEMP_THRESHOLD_THIRD  1F
TEMP_THRESHOLD_ZERO  5
TIRED_WORK          1546
TITLE               1EBF
UNABLE_BUY          16E0
VISITEDCASTLE       3ECA
VISITEDSHOP         3EC4
WAIT                1E54
WAIT_LOOP           1E5A
WATERMILLCOUNT      3EC0
WATER_MILL          180C
WATER_MILL_COST     C8
WATER_MILL_MONEY    6
WATER_MILL_REDUCTION  A
WATER_MILL_REDUCTION_OVERALL  2
WELCOME             1170
WELCOME_STRING_1    21F4
WELCOME_STRING_2    2217
WELCOME_STRING_3    227B
WORK                150A
WORK_STRING         3C50
WORK_TIRED_STRING   3C58
YES_NO              36C4
YOU                 24DB
YOUR                3391
